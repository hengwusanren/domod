{"version":3,"file":"domod.min.js","sources":["../src/Util.js","../src/Kernel.js","../src/index.js"],"sourcesContent":["var gid = (function () {\n    var n = 0;\n    return function () {\n        return n++;\n    };\n})();\n\nvar isBoolean = function (v) {\n    return typeof v === 'boolean';\n};\n\nvar isNumber = function (v) {\n    return typeof v === 'number';\n};\n\nvar isNumeric = function (v) {\n    var n = parseInt(v);\n    if (isNaN(n)) return false;\n    return (typeof v === 'number' || typeof v === 'string') && n == v;\n};\n\nvar isString = function (v) {\n    return typeof v === 'string';\n};\n\nvar isFunction = function (v) {\n    return typeof v === 'function';\n};\n\nvar isObject = function (v) {\n    return v != null && Object.prototype.toString.call(v) === '[object Object]';\n};\n\nvar isArray = function (v) {\n    return Object.prototype.toString.call(v) === '[object Array]';\n};\n\nvar isBasic = function (v) {\n    return v == null\n        || typeof v === 'boolean'\n        || typeof v === 'number'\n        || typeof v === 'string'\n        || typeof v === 'function';\n};\n\nvar isInstance = function (v, creator) {\n    return typeof creator === 'function' && v instanceof creator;\n};\n\nvar isDirectInstance = function (v, creator) {\n    return v.constructor === creator;\n};\n\nvar isNode = function (v) {\n    if (typeof Node !== 'function') return false;\n    return v instanceof Node;\n};\n\nvar isNamedNodeMap = function (v) {\n    return v instanceof NamedNodeMap;\n};\n\nvar isEventName = function (v) {\n    if (!isString(v) || !v.startsWith('on')) return false;\n    return v.substr(2); // TODO\n};\n\nvar isCSSSelector = function (v) {\n    return v.indexOf(' ') > 0 || v.indexOf('.') >= 0\n        || v.indexOf('[') >= 0 || v.indexOf('#') >= 0;\n};\n\nvar each = function (v, func, arrayReverse) {\n    var i;\n    var len;\n    if (isObject(v)) {\n        for (var p in v) {\n            if (!v.hasOwnProperty(p)) continue;\n            if (func(v[p], p) === false) break;\n        }\n    } else if (isArray(v)) {\n        if (!arrayReverse) {\n            for (i = 0, len = v.length; i < len; i++) {\n                if (func(v[i], i) === false) break;\n            }\n        } else {\n            for (i = v.length - 1; i >= 0; i--) {\n                if (func(v[i], i) === false) break;\n            }\n        }\n    } else if (isNode(v)) {\n        var ret = false;\n        switch (v.nodeType) {\n        case Node.ELEMENT_NODE:\n            break;\n        case Node.TEXT_NODE:\n        case Node.COMMENT_NODE:\n        case Node.PROCESSING_INSTRUCTION_NODE:\n        case Node.DOCUMENT_NODE:\n        case Node.DOCUMENT_TYPE_NODE:\n        case Node.DOCUMENT_FRAGMENT_NODE:\n        default:\n            ret = true;\n        }\n        if (ret) return;\n        var childNodes = v.childNodes;\n        for (i = 0, len = childNodes.length; i < len; i++) {\n            func(childNodes[i]);\n            each(childNodes[i], func);\n        }\n    } else if (isNamedNodeMap(v)) {\n        for (i = 0, len = v.length; i < len; i++) {\n            if (func(v[i]['nodeValue'], v[i]['nodeName']) === false) break;\n        }\n    } else if (v && isFunction(v.forEach)) {\n        v.forEach(func);\n    }\n};\n\nvar eachIndexOf = function (str, pat) {\n    var p0 = 0;\n    var p1;\n    var len = str.length;\n    var r = [];\n    while (p0 < len) {\n        p1 = str.indexOf(pat, p0);\n        if (p1 < len) {\n            r.push(p1);\n            p0 = p1 + pat.length;\n        }\n    }\n    return r;\n};\n\nvar eachUnique = function (arr, func) {\n    if (!isArray(arr)) return;\n    var map = {};\n    for (var i = 0, len = arr.length; i < len; i++) {\n        if (!isNumber(arr[i]) || !isString(arr[i]) || map[arr[i]]) continue;\n        map[arr[i]] = true;\n        var r = func(arr[i]);\n        if (r === false) break;\n    }\n};\n\nvar unique = function (arr) {\n    var r = [];\n    eachUnique(arr, function (v) {\n        r.push(v);\n    });\n    return r;\n};\n\nvar clone = function (val) {\n    var r = val;\n    if (isObject(val)) {\n        r = {};\n        each(val, function (v, p) {\n            r[p] = clone(v);\n        });\n    } else if (isArray(val)) {\n        r = [];\n        each(val, function (v) {\n            r.push(clone(v));\n        });\n    }\n    return r;\n};\n\nvar hasProperty = function (val, p) {\n    if (isObject(val)) {\n        return val.hasOwnProperty(p);\n    } else if (isArray(val)) {\n        var n = parseInt(p);\n        return isNumeric(p) && val.length > n && n >= 0;\n    }\n    return false;\n};\n\nvar clear = function (val, p, withBasicVal) {\n    var inRef = isString(p) || isNumber(p);\n    var target = inRef ? val[p] : val;\n\n    if (isObject(target) || isArray(target)) {\n        each(target, function (v, p) {\n            clear(target, p);\n        });\n        if (isArray(target)) {\n            shrinkArray(target);\n        }\n    }\n\n    if (inRef) {\n        val[p] = withBasicVal;\n    }\n};\n\nvar shrinkArray = function (arr, len) {\n    var limited = isNumber(len);\n    if (!limited) {\n        each(arr, function (v, i) {\n            if (v === undefined) arr.length--;\n        }, true);\n    } else {\n        each(arr, function (v, i) {\n            if (i >= len) arr.length--;\n            else return false;\n        }, true);\n        while (arr.length < len) {\n            arr.push(null);\n        }\n    }\n    return arr;\n};\n\nvar touchLeaves = function (obj) {\n    each(obj, function (v, p) {\n        if (isBasic(v)) {\n            obj[p] = v;\n        } else {\n            touchLeaves(v);\n        }\n    });\n};\n\nvar extend = function (dest, srcs, clean) {\n    if (!isObject(dest)) return null;\n    var args = Array.prototype.slice.call(arguments, 1,\n        arguments[arguments.length - 1] === true ? (arguments.length - 1) : arguments.length);\n    clean = arguments[arguments.length - 1] === true;\n\n    function extendObj(obj, src, clean) {\n        if (!isObject(src)) return;\n        each(src, function (v, p) {\n            if (!hasProperty(obj, p) || isBasic(v)) {\n                if (obj[p] !== v) {\n                    obj[p] = clone(v);\n                }\n            } else {\n                extendObj(obj[p], v, clean);\n            }\n        });\n        if (clean) {\n            each(obj, function (v, p) {\n                if (!hasProperty(src, p)) {\n                    clear(obj, p);\n                }\n            });\n            if (isArray(obj)) {\n                shrinkArray(obj);\n            }\n        }\n    }\n\n    each(args, function (src) {\n        extendObj(dest, src, clean);\n    });\n    return dest;\n};\n\nvar allRefs = function (obj) {\n    var refs = [];\n    each(obj, function (v, p) {\n        if (isObject(v)) {\n            var f = allRefs(v);\n            each(f, function (vv, pp) {\n                refs.push(p + '.' + pp);\n            });\n        } else {\n            refs.push(p);\n        }\n    })\n    return refs;\n};\n\nvar refData = function (root, refPath, value) {\n    var toSet = arguments.length >= 3;\n    var v = root;\n    var paths = [];\n    if (refPath) paths = refPath.split('.');\n\n    if (!toSet) {\n        while (paths.length) {\n            if (isBasic(v)) return undefined;\n            v = v[paths.shift()];\n        }\n        return v;\n    } else {\n        while (paths.length) {\n            if (isBasic(v)) return undefined;\n            if (paths.length === 1) {\n                v[paths.shift()] = value;\n            } else {\n                v = v[paths.shift()];\n            }\n        }\n        return value;\n    }\n};\n\nfunction addEvent($el, eventName, handler, useCapture) {\n    if ($el.addEventListener) {\n        $el.addEventListener(eventName, handler, !!useCapture);\n    } else {\n        if (eventName === 'input') {\n            eventName = 'propertychange';\n        }\n        $el.attachEvent('on' + eventName, handler);\n    }\n}\n\nfunction flatten(root, objectFilter, clean) {\n    objectFilter = objectFilter || function () { return true; };\n    var ext = {};\n    each(root, function (v, p) {\n        if (isObject(v) && !objectFilter(v)) {\n            var f = flatten(v, objectFilter, clean);\n            each(f, function (vv, pp) {\n                ext[p + '.' + pp] = vv;\n            });\n        } else {\n            if (objectFilter(v) || !clean) {\n                ext[p] = v;\n            }\n        }\n    })\n    return ext;\n}\n\nexport {\n    gid,\n    isBoolean,\n    isNumber,\n    isNumeric,\n    isString,\n    isFunction,\n    isObject,\n    isArray,\n    isBasic,\n    isInstance,\n    isDirectInstance,\n    isNode,\n    isNamedNodeMap,\n    isEventName,\n    isCSSSelector,\n    each,\n    eachIndexOf,\n    eachUnique,\n    unique,\n    clone,\n    hasProperty,\n    clear,\n    shrinkArray,\n    touchLeaves,\n    extend,\n    allRefs,\n    refData,\n    addEvent,\n    flatten\n}\n","import * as Util from './Util'\n\nvar Store = {};\nvar Dnstreams = {};\nvar ResultsIn = {};\nvar Upstreams = {};\nvar ResultsFrom = {};\nvar Laziness = {};\nvar PropKernelTable = {};\nvar KernelStatus = {};\nvar GetterSetter = {};\n\nvar definePropertyFeature = !!Object.defineProperty;\nvar useDefineProperty = false && definePropertyFeature;\n\nfunction defineProperty(target, prop, desc, proppath) {\n    if (useDefineProperty) {\n        Object.defineProperty(target, prop, desc);\n    } else {\n        if ('value' in desc) {\n            target[prop] = desc.value;\n        }\n        proppath = proppath || fullpathOf(prop, target);\n        if (!GetterSetter[proppath] && ('get' in desc || 'set' in desc)) GetterSetter[proppath] = {};\n        if ('get' in desc) {\n            GetterSetter[proppath].get = desc.get;\n        }\n        if ('set' in desc) {\n            GetterSetter[proppath].set = desc.set;\n        }\n    }\n}\n\nfunction fullpathOf(ref, root) {\n    if (root === undefined) return ref;\n    var pre = register(root);\n    if (pre == null) return ref || '';\n    return pre + (ref ? ('.' + ref) : '');\n}\n\nfunction register(root) {\n    if (root === Store || (!Util.isObject(root) && !Util.isNode(root))) return null;\n    if (!root.__kernel_root) {\n        var id = 'kr_' + Util.gid();\n        if (!Util.isNode(root)) {\n            defineProperty(root, '__kernel_root', {\n                value: id\n            });\n        } else {\n            root.__kernel_root = id;\n        }\n        Store[id] = root;\n    }\n    return root.__kernel_root;\n}\n\nfunction formatStream(stream, root) {\n    if (Util.isObject(stream) || Util.isString(stream)) stream = [stream];\n    if (Util.isArray(stream)) {\n        return stream.map(function (a) {\n            if (Util.isObject(a)) return register(a.root) + '.' + a.alias;\n            if (Util.isString(a)) return register(root) + '.' + a;\n            return null;\n        });\n    } else {\n        return [];\n    }\n}\n\nfunction propKernelOrder(proppath) {\n    if (PropKernelTable[proppath] === undefined) return 0;\n    return PropKernelTable[proppath].length;\n}\n\n/**\n * Kernel constructor function.\n * @constructor\n */\nfunction Kernel(root, path, relations) {\n    var obj = {};\n    var value;\n    if (useDefineProperty) {\n        obj = scopeOf(path, root);\n        if (obj == null) return;\n        value = obj.target[obj.property];\n    }\n\n    var proppath = register(root) + '.' + path;\n    var __kid = proppath + '#' + propKernelOrder(proppath);\n    defineProperty(this, '__kid', {\n        value: __kid\n    });\n    KernelStatus[this.__kid] = 1;\n    if (PropKernelTable[proppath] === undefined) {\n        PropKernelTable[proppath] = [];\n        if (useDefineProperty && Util.hasProperty(obj.target, obj.property)) {\n            delete obj.target[obj.property];\n        }\n    }\n    PropKernelTable[proppath].push(1);\n\n    var dnstream = formatStream(relations.dnstream, root);\n    var resultIn = relations.resultIn;\n    var upstream = formatStream(relations.upstream, root);\n    var resultFrom = relations.resultFrom;\n    var lazy = !!relations.lazy;\n    if (!Dnstreams[proppath]) Dnstreams[proppath] = {};\n    dnstream.forEach(function (p) {\n        if (!Upstreams[p]) Upstreams[p] = {};\n        if (!Upstreams[p][proppath]) Upstreams[p][proppath] = {};\n        Upstreams[p][proppath][__kid] = 1;\n        if (!Dnstreams[proppath][p]) Dnstreams[proppath][p] = {};\n        Dnstreams[proppath][p][__kid] = 1;\n    });\n    if (!ResultsIn[proppath]) ResultsIn[proppath] = [];\n    ResultsIn[proppath].push(Util.isFunction(resultIn) ? resultIn : null);\n    if (!Upstreams[proppath]) Upstreams[proppath] = {};\n    upstream.forEach(function (p) {\n        if (!Upstreams[proppath][p]) Upstreams[proppath][p] = {};\n        Upstreams[proppath][p][__kid] = 1;\n        if (!Dnstreams[p]) Dnstreams[p] = {};\n        if (!Dnstreams[p][proppath]) Dnstreams[p][proppath] = {};\n        Dnstreams[p][proppath][__kid] = 1;\n    });\n    if (Util.isFunction(resultFrom)) {\n        ResultsFrom[proppath] = {\n            f: resultFrom,\n            k: this.__kid,\n            deps: upstream\n        };\n    }\n    if (lazy) Laziness[proppath] = true;\n\n    if (PropKernelTable[proppath].length === 1) {\n        defineProperty(obj.target, obj.property, {\n            get: function (target, property) {\n                if (ResultsFrom[proppath] && KernelStatus[ResultsFrom[proppath].k] !== 0) {\n                    var v = ResultsFrom[proppath].f.apply(\n                        null,\n                        ResultsFrom[proppath].deps.map(function (p) { return Data(null, p); })\n                    );\n                    Data(null, proppath, v);\n                    value = v;\n                } else {\n                    if (!useDefineProperty) {\n                        if (property !== undefined) {\n                            value = target[property];\n                        } else {\n                            obj = scopeOf(proppath);\n                            value = obj.target[obj.property];\n                        }\n                    }\n                }\n                return value;\n            },\n            set: function (val, target, property) {\n                if (val === value) return;\n                value = val;\n                if (!useDefineProperty) {\n                    if (property !== undefined) {\n                        target[property] = val;\n                    } else {\n                        obj = scopeOf(proppath);\n                        obj.target[obj.property] = val;\n                    }\n                }\n                ResultsIn[proppath] && ResultsIn[proppath].forEach(function (f, k) {\n                    f && (KernelStatus[proppath + '#' + k] !== 0) && f.apply(root, [val]);\n                });\n                if (Dnstreams[proppath]) {\n                    Util.each(Dnstreams[proppath], function (kmap, ds) {\n                        var toUpdateDnstream = false;\n                        Util.each(kmap, function (v, k) {\n                            if (KernelStatus[k] !== 0) {\n                                toUpdateDnstream = true;\n                                return false;\n                            }\n                        });\n                        toUpdateDnstream && ResultsFrom[ds] && !Laziness[ds] && Data(null, ds);\n                    });\n                }\n            },\n            // configurable: true,\n            enumerable: true\n        }, proppath);\n    }\n\n    if (Util.hasProperty(relations, 'value')) {\n        Data(null, proppath, relations.value);\n    }\n}\n\nKernel.prototype.disable = function () {\n    KernelStatus[this.__kid] = 0;\n};\nKernel.prototype.enable = function () {\n    KernelStatus[this.__kid] = 1;\n};\nKernel.prototype.destroy = function () {\n    // TODO\n};\n\n/**\n * Whether an object is a relation definition.\n * @param {Object} obj \n * @return {Boolean}\n */\nfunction isRelationDefinition(obj) {\n    if (!Util.isObject(obj)) return false;\n    var r = true;\n    var specProps = {\n        __isRelation: 2, // !\n        dnstream: 1, // *\n        resultIn: 1, // *\n        upstream: 1, // *\n        resultFrom: 1, // *\n        lazy: true,\n        value: true\n    };\n    var count = 0;\n    Util.each(obj, function (v, p) {\n        if (specProps[p] === 2) {\n            r = true;\n            count++;\n            return false;\n        }\n        if (!specProps[p]) {\n            r = false;\n            return false;\n        }\n        if (specProps[p] === 1) {\n            count++;\n        }\n    });\n    return r && (count > 0);\n}\n\n/**\n * Define and bind data with relations in a whole (PropertyPath => Relation) map.\n * @param {Object} obj                  The data object. If `relations` is undefined, it contains relations.\n * @param {Object|Undefined} relations  A map from propertyPath to relation.\n */\nfunction Relate(obj, relations) {\n    var fr;\n    if (arguments.length === 1) {\n        if (!Util.isObject(obj)) return null;\n        fr = Util.flatten(obj, isRelationDefinition, true);\n    } else if (Util.isObject(relations)) {\n        fr = Util.flatten(relations, isRelationDefinition, true);\n    } else {\n        return null;\n    }\n    Util.each(fr, function (rel, p) {\n        new Kernel(obj, p, rel);\n    });\n\n    return obj;\n}\n\n/**\n * Get the target and property.\n * @param {String} ref \n * @param {Object} root \n */\nfunction scopeOf(ref, root) {\n    if (root === undefined) root = Store;\n    if ((!Util.isObject(root) && !Util.isNode(root)) || !Util.isString(ref)) return null;\n    var fullpath = fullpathOf(ref, root);\n    var lastDot = fullpath.lastIndexOf('.');\n    return {\n        target: Data(null, fullpath.substring(0, lastDot)),\n        property: fullpath.substring(lastDot + 1)\n    };\n}\n\n/**\n * Get or set data, and trigger getters or setters.\n */\nfunction Data(root, refPath, value) {\n    root = root || Store;\n    var toSet = arguments.length >= 3;\n    var v = root;\n    var proppath = fullpathOf(null, root);\n    var paths = [];\n    if (refPath) paths = refPath.split('.');\n    var p;\n\n    while (paths.length) {\n        if (Util.isBasic(v)) return undefined;\n        p = paths.shift();\n        proppath += (proppath === '' ? '' : '.') + p;\n        if (toSet && paths.length === 0) { /* set */\n            if (!useDefineProperty && GetterSetter[proppath] && GetterSetter[proppath].set) {\n                GetterSetter[proppath].set(value, v, p);\n            }\n            v[p] = value;\n        } else { /* get */\n            if (!useDefineProperty && GetterSetter[proppath] && GetterSetter[proppath].get) {\n                v = GetterSetter[proppath].get(v, p);\n            } else {\n                v = v[p];\n            }\n        }\n    }\n    return toSet ? value : v;\n}\n\nexport { Kernel, Relate, Data }\n","// import './Polyfill'\nimport * as Util from './Util'\nimport { Kernel, Relate, Data } from './Kernel'\n\n/**\n * Bind data to DOM.\n * @param  {HTMLElement} $el            [description]\n * @param  {Object} ref                 [description]\n * @return {[type]}                     [description]\n */\nfunction Bind($el, ref) {\n    if (!Util.isNode($el) || !Util.isObject(ref)) return;\n\n    if ($el.nodeType === Node.ELEMENT_NODE && !$el[DefaultConf.domBoundFlag]) {\n        $el[DefaultConf.domBoundFlag] = true; /* Set a binding flag. */\n        var attrList = [];\n        Util.each($el.attributes, function (value, name) {\n            if (!name.startsWith(DefaultConf.attrPrefix)) return;\n            attrList.push(name);\n            name = name.substr(DefaultConf.attrPrefix.length).toLowerCase();\n            switch (name) {\n            case 'value':\n                Util.addEvent($el, 'input', function (e) {\n                    Data(ref, DefaultConf.refBeginsWithDollar ? value.substr(1) : value, this.value);\n                }, false);\n                Relate(ref, relationFromExprToRef(value, ref, $el, name));\n                break;\n            case 'innertext':\n            case 'innerhtml':\n                Relate(ref, relationFromExprToRef(value, ref, $el, (name === 'innertext') ? 'innerText' : 'innerHTML'));\n                break;\n            case 'class':\n                Relate(ref, relationFromExprToRef(value, ref, $el, 'className', function () {\n                    var re = evaluateExpression(value, ref);\n                    var classList = [];\n                    if (Util.isObject(re)) {\n                        Util.each(re, function (v, p) {\n                            v && classList.push(p);\n                        });\n                    } else if (Util.isArray(re)) {\n                        Util.each(re, function (v) {\n                            if (Util.isString(v)) classList.push(v);\n                            else if (Util.isObject(v)) {\n                                Util.each(v, function (vv, pp) {\n                                    vv && classList.push(pp);\n                                });\n                            }\n                        });\n                    }\n                    return classList.join(' ');\n                }));\n                break;\n            case 'style':\n                Relate(ref, relationFromExprToRef(value, ref, $el, 'style.cssText', function () {\n                    var re = evaluateExpression(value, ref);\n                    var stylePairs = [];\n                    if (Util.isObject(re)) {\n                        Util.each(re, function (v, p) {\n                            stylePairs.push(p + ':' + v);\n                        });\n                    }\n                    return stylePairs.join(';');\n                }));\n                break;\n            default:\n                var eventName = Util.isEventName(name);\n                var params = Object.keys(ref);\n                if (DefaultConf.refBeginsWithDollar) {\n                    params = params.map(function (r) {\n                        return '$' + r;\n                    });\n                }\n                if (eventName) { /* Event */\n                    Util.addEvent($el, eventName, function (e) {\n                        new Function(['e'].concat(params).join(','), value).apply($el, Object.values(ref));\n                    }, false);\n                } else { /* Attribute */\n                    var resultIn = function (v) {\n                        $el.setAttribute(name, new Function(params.join(','), 'return ' + value).apply($el, Object.values(ref)));\n                    };\n                    var rels = {};\n                    Util.each(parseRefsInExpr(value), function (r) {\n                        rels[r] = {\n                            resultIn: resultIn\n                        };\n                    });\n                    Relate(ref, rels);\n                }\n            }\n        });\n        Util.each(attrList, function (name) {\n            $el.removeAttribute(name);\n        });\n        Util.each($el, function (node) {\n            Bind(node, ref);\n        });\n    } else if ($el.nodeType === Node.TEXT_NODE) {\n        var tmpl = $el.nodeValue;\n        var expr = parseExprsInRawText(tmpl).join(';');\n        if (expr === '') return;\n        Relate(ref, relationFromExprToRef(expr, ref, $el, 'nodeValue', function () {\n            return evaluateRawTextWithTmpl(tmpl, ref);\n        }));\n    }\n}\n\n/**\n * Evaluate an expression with a data object.\n * @param {String} expr \n * @param {Object} ref \n * @return {*}\n */\nfunction evaluateExpression(expr, ref) {\n    expr = replaceTmplInStrLiteral(expr);\n    var params = Object.keys(ref);\n    if (DefaultConf.refBeginsWithDollar) {\n        params = params.map(function (r) {\n            return '$' + r;\n        });\n    }\n    var args = Object.values(ref);\n    Util.each(args, function (v, i) {\n        if (Util.isFunction(v)) {\n            args[i] = v.bind(ref);\n        }\n    });\n    var result = null;\n    try {\n        result = (new Function(params.join(','), 'return ' + expr)).apply(ref, args);\n    } catch (e) {}\n    return result;\n}\n\n/**\n * Fix template strings in a string literal to JavaScript string-concat expressions.\n * @param {String} str \n * @return {String}\n * @example \"'My name is {{name}}.'\" => \"'My name is ' + (name) + '.'\"\n */\nfunction replaceTmplInStrLiteral(str) {\n    var reg = /{{([^{}]*)}}/g;\n    return str.replace(reg, function (match, p1) {\n        return '\\' + (' + p1 + ') + \\'';\n    });\n}\n\n/**\n * Evaluate a raw text with template expressions.\n * @param {String} text \n * @param {Object} ref \n * @return {String}\n * @example ('My name is {{name}}.', { name: 'Tom' }) => 'My name is Tom.'\n */\nfunction evaluateRawTextWithTmpl(text, ref) {\n    var reg = /{{([^{}]*)}}/g;\n    var result = text.replace(reg, function (match, p1) {\n        return evaluateExpression(p1, ref);\n    });\n    return result;\n}\n\n/**\n * Parse reference paths from an expression string.\n * @param {String} expr \n * @return {Array<String>}\n */\nfunction parseRefsInExpr(expr) {\n    expr = ';' + expr + ';';\n    var reg;\n    if (DefaultConf.refBeginsWithDollar) {\n        reg = /\\$([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\n        return expr.match(reg).map(function (r) {\n            return r.substr(1);\n        });\n    } else {\n        reg = /([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\n        return expr.match(reg);\n    }\n}\n\n/**\n * Parse template expression strings from a raw text such as a text node value.\n * @param {String} text     [description]\n * @return {Array<String>}  [description]\n * @example 'My name is {{name}}. I\\'m {{age}} years old.' => ['name', 'age']\n */\nfunction parseExprsInRawText(text) {\n    var reg = /{{([^{}]*)}}/g;\n    var exprs = [];\n    text.replace(reg, function (match, p1) {\n        exprs.push(p1);\n        return '';\n    });\n    return exprs;\n}\n\n/**\n * Get relations from an expression string to the data.\n * @param {String}      expr \n * @param {Object}      ref \n * @param {Function}    resultFrom \n * @return {Object}\n */\nfunction relationFromExprToRef(expr, ref, target, proppath, resultFrom) {\n    function getAllRefs(expr, ref) {\n        var subData = {};\n        Util.each(parseRefsInExpr(expr), function (r) {\n            subData[r] = Data(ref, r);\n        });\n        return Util.allRefs(subData);\n    }\n    var resultIn = function () {\n        Data(target, proppath, (resultFrom || function () {\n            return evaluateExpression(expr, ref);\n        })());\n    };\n    var r = {};\n    getAllRefs(expr, ref).forEach(function (ref) {\n        r[ref] = {\n            resultIn: resultIn\n        };\n    });\n    resultIn();\n    return r;\n}\n\n/**\n * Unbind data from DOM.\n * @param       {[type]} $el      [description]\n * @param       {[type]} ref      [description]\n * @param       {[type]} relation [description]\n * @constructor\n */\nfunction Unbind($el, ref, relation) {\n    // TODO\n}\n\n/**\n * Default configurations.\n * @type {Object}\n */\nvar DefaultConf = {\n    attrPrefix: 'm-',\n    domBoundFlag: '__dmd_bound',\n    refBeginsWithDollar: true\n};\n\n/**\n * Constructor.\n * @param {*}  \n * @param {*} ref \n */\nvar DMD = function ($el, ref) {\n    Bind.call(this, $el, ref);\n};\n\nDMD.kernel = Kernel;\nDMD.relate = Relate;\nDMD.$ = Data;\n\nexport default DMD\n"],"names":["addEvent","$el","eventName","handler","useCapture","addEventListener","attachEvent","flatten","root","objectFilter","clean","ext","each","v","p","isObject","f","vv","pp","defineProperty","target","prop","desc","proppath","useDefineProperty","Object","value","fullpathOf","GetterSetter","get","set","ref","undefined","pre","register","Store","Util.isObject","Util.isNode","__kernel_root","id","Util.gid","formatStream","stream","Util.isString","Util.isArray","map","a","alias","propKernelOrder","PropKernelTable","length","Kernel","path","relations","obj","scopeOf","property","__kid","this","KernelStatus","Util.hasProperty","push","dnstream","resultIn","upstream","resultFrom","lazy","Dnstreams","forEach","Upstreams","ResultsIn","Util.isFunction","ResultsFrom","k","deps","Laziness","apply","Data","val","Util.each","kmap","ds","toUpdateDnstream","enumerable","isRelationDefinition","r","specProps","__isRelation","count","Relate","fr","arguments","Util.flatten","rel","fullpath","lastDot","lastIndexOf","substring","refPath","toSet","paths","split","Util.isBasic","shift","Bind","nodeType","Node","ELEMENT_NODE","DefaultConf","domBoundFlag","TEXT_NODE","tmpl","nodeValue","expr","parseExprsInRawText","join","relationFromExprToRef","evaluateRawTextWithTmpl","attrList","attributes","name","startsWith","attrPrefix","substr","toLowerCase","Util.addEvent","e","refBeginsWithDollar","re","evaluateExpression","classList","stylePairs","Util.isEventName","params","keys","Function","concat","values","setAttribute","rels","parseRefsInExpr","removeAttribute","node","replaceTmplInStrLiteral","args","i","bind","result","str","reg","replace","match","p1","text","exprs","subData","Util.allRefs","getAllRefs","gid","n","isNumeric","parseInt","isNaN","isString","isFunction","prototype","toString","call","isArray","isBasic","isNode","isNamedNodeMap","NamedNodeMap","isEventName","func","arrayReverse","len","hasOwnProperty","ret","COMMENT_NODE","PROCESSING_INSTRUCTION_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","childNodes","hasProperty","allRefs","refs","disable","enable","destroy","DMD","kernel","relate","$"],"mappings":"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"}