{"version":3,"file":"domod.min.js","sources":["../src/Util.js","../src/Kernel.js","../src/Parser.js","../src/index.js"],"sourcesContent":["var gid = (function () {\r\n    var n = 0;\r\n    return function () {\r\n        return n++;\r\n    };\r\n})();\r\n\r\nvar isBoolean = function (v) {\r\n    return typeof v === 'boolean';\r\n};\r\n\r\nvar isNumber = function (v) {\r\n    return typeof v === 'number';\r\n};\r\n\r\nvar isNumeric = function (v) {\r\n    var n = parseInt(v);\r\n    if (isNaN(n)) return false;\r\n    return (typeof v === 'number' || typeof v === 'string') && n == v;\r\n};\r\n\r\nvar isString = function (v) {\r\n    return typeof v === 'string';\r\n};\r\n\r\nvar isFunction = function (v) {\r\n    return typeof v === 'function';\r\n};\r\n\r\nvar isObject = function (v) {\r\n    return v != null && Object.prototype.toString.call(v) === '[object Object]';\r\n};\r\n\r\nvar isArray = function (v) {\r\n    return Object.prototype.toString.call(v) === '[object Array]';\r\n};\r\n\r\nvar isBasic = function (v) {\r\n    return v == null\r\n        || typeof v === 'boolean'\r\n        || typeof v === 'number'\r\n        || typeof v === 'string'\r\n        || typeof v === 'function';\r\n};\r\n\r\nvar isInstance = function (v, creator) {\r\n    return typeof creator === 'function' && v instanceof creator;\r\n};\r\n\r\nvar isDirectInstance = function (v, creator) {\r\n    return v.constructor === creator;\r\n};\r\n\r\nvar isNode = function (v) {\r\n    if (typeof Node !== 'function') return false;\r\n    return v instanceof Node;\r\n};\r\n\r\nvar isNamedNodeMap = function (v) {\r\n    return v instanceof NamedNodeMap;\r\n};\r\n\r\nvar isEventName = function (v) {\r\n    if (!isString(v) || !v.startsWith('on')) return false;\r\n    return v.substr(2); // TODO\r\n};\r\n\r\nvar isCSSSelector = function (v) {\r\n    return v.indexOf(' ') > 0 || v.indexOf('.') >= 0\r\n        || v.indexOf('[') >= 0 || v.indexOf('#') >= 0;\r\n};\r\n\r\nvar each = function (v, func, arrayReverse) {\r\n    var i;\r\n    var len;\r\n    if (isObject(v)) {\r\n        for (var p in v) {\r\n            if (!v.hasOwnProperty(p)) continue;\r\n            if (func(v[p], p) === false) break;\r\n        }\r\n    } else if (isArray(v)) {\r\n        if (!arrayReverse) {\r\n            for (i = 0, len = v.length; i < len; i++) {\r\n                if (func(v[i], i) === false) break;\r\n            }\r\n        } else {\r\n            for (i = v.length - 1; i >= 0; i--) {\r\n                if (func(v[i], i) === false) break;\r\n            }\r\n        }\r\n    } else if (isNode(v)) {\r\n        var ret = false;\r\n        switch (v.nodeType) {\r\n        case Node.ELEMENT_NODE:\r\n            break;\r\n        case Node.TEXT_NODE:\r\n        case Node.COMMENT_NODE:\r\n        case Node.PROCESSING_INSTRUCTION_NODE:\r\n        case Node.DOCUMENT_NODE:\r\n        case Node.DOCUMENT_TYPE_NODE:\r\n        case Node.DOCUMENT_FRAGMENT_NODE:\r\n        default:\r\n            ret = true;\r\n        }\r\n        if (ret) return;\r\n        var childNodes = v.childNodes;\r\n        for (i = 0, len = childNodes.length; i < len; i++) {\r\n            func(childNodes[i]);\r\n            each(childNodes[i], func);\r\n        }\r\n    } else if (isNamedNodeMap(v)) {\r\n        for (i = 0, len = v.length; i < len; i++) {\r\n            if (func(v[i]['nodeValue'], v[i]['nodeName']) === false) break;\r\n        }\r\n    } else if (v && isFunction(v.forEach)) {\r\n        v.forEach(func);\r\n    }\r\n};\r\n\r\nvar eachIndexOf = function (str, pat) {\r\n    var p0 = 0;\r\n    var p1;\r\n    var len = str.length;\r\n    var r = [];\r\n    while (p0 < len) {\r\n        p1 = str.indexOf(pat, p0);\r\n        if (p1 < len) {\r\n            r.push(p1);\r\n            p0 = p1 + pat.length;\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\nvar eachUnique = function (arr, func) {\r\n    if (!isArray(arr)) return;\r\n    var map = {};\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n        if (!isNumber(arr[i]) || !isString(arr[i]) || map[arr[i]]) continue;\r\n        map[arr[i]] = true;\r\n        var r = func(arr[i]);\r\n        if (r === false) break;\r\n    }\r\n};\r\n\r\nvar unique = function (arr) {\r\n    var r = [];\r\n    eachUnique(arr, function (v) {\r\n        r.push(v);\r\n    });\r\n    return r;\r\n};\r\n\r\nvar clone = function (val) {\r\n    var r = val;\r\n    if (isObject(val)) {\r\n        r = {};\r\n        each(val, function (v, p) {\r\n            r[p] = clone(v);\r\n        });\r\n    } else if (isArray(val)) {\r\n        r = [];\r\n        each(val, function (v) {\r\n            r.push(clone(v));\r\n        });\r\n    }\r\n    return r;\r\n};\r\n\r\nvar hasProperty = function (val, p) {\r\n    if (isObject(val)) {\r\n        return val.hasOwnProperty(p);\r\n    } else if (isArray(val)) {\r\n        var n = parseInt(p);\r\n        return isNumeric(p) && val.length > n && n >= 0;\r\n    }\r\n    return false;\r\n};\r\n\r\nvar clear = function (val, p, withBasicVal) {\r\n    var inRef = isString(p) || isNumber(p);\r\n    var target = inRef ? val[p] : val;\r\n\r\n    if (isObject(target) || isArray(target)) {\r\n        each(target, function (v, p) {\r\n            clear(target, p);\r\n        });\r\n        if (isArray(target)) {\r\n            shrinkArray(target);\r\n        }\r\n    }\r\n\r\n    if (inRef) {\r\n        val[p] = withBasicVal;\r\n    }\r\n};\r\n\r\nvar shrinkArray = function (arr, len) {\r\n    var limited = isNumber(len);\r\n    if (!limited) {\r\n        each(arr, function (v, i) {\r\n            if (v === undefined) arr.length--;\r\n        }, true);\r\n    } else {\r\n        each(arr, function (v, i) {\r\n            if (i >= len) arr.length--;\r\n            else return false;\r\n        }, true);\r\n        while (arr.length < len) {\r\n            arr.push(null);\r\n        }\r\n    }\r\n    return arr;\r\n};\r\n\r\nvar touchLeaves = function (obj) {\r\n    each(obj, function (v, p) {\r\n        if (isBasic(v)) {\r\n            obj[p] = v;\r\n        } else {\r\n            touchLeaves(v);\r\n        }\r\n    });\r\n};\r\n\r\nvar extend = function (dest, srcs, clean) {\r\n    if (!isObject(dest)) return null;\r\n    var args = Array.prototype.slice.call(arguments, 1,\r\n        arguments[arguments.length - 1] === true ? (arguments.length - 1) : arguments.length);\r\n    clean = arguments[arguments.length - 1] === true;\r\n\r\n    function extendObj(obj, src, clean) {\r\n        if (!isObject(src)) return;\r\n        each(src, function (v, p) {\r\n            if (!hasProperty(obj, p) || isBasic(v)) {\r\n                if (obj[p] !== v) {\r\n                    obj[p] = clone(v);\r\n                }\r\n            } else {\r\n                extendObj(obj[p], v, clean);\r\n            }\r\n        });\r\n        if (clean) {\r\n            each(obj, function (v, p) {\r\n                if (!hasProperty(src, p)) {\r\n                    clear(obj, p);\r\n                }\r\n            });\r\n            if (isArray(obj)) {\r\n                shrinkArray(obj);\r\n            }\r\n        }\r\n    }\r\n\r\n    each(args, function (src) {\r\n        extendObj(dest, src, clean);\r\n    });\r\n    return dest;\r\n};\r\n\r\nvar allRefs = function (obj) {\r\n    var refs = [];\r\n    each(obj, function (v, p) {\r\n        if (isObject(v)) {\r\n            var f = allRefs(v);\r\n            each(f, function (pp) {\r\n                refs.push(p + '.' + pp);\r\n            });\r\n        } else {\r\n            refs.push(p);\r\n        }\r\n    })\r\n    return refs;\r\n};\r\n\r\nvar refData = function (root, refPath, value) {\r\n    var toSet = arguments.length >= 3;\r\n    var v = root;\r\n    var paths = [];\r\n    if (refPath) paths = refPath.split('.');\r\n\r\n    if (!toSet) {\r\n        while (paths.length) {\r\n            if (isBasic(v)) return undefined;\r\n            v = v[paths.shift()];\r\n        }\r\n        return v;\r\n    } else {\r\n        while (paths.length) {\r\n            if (isBasic(v)) return undefined;\r\n            if (paths.length === 1) {\r\n                v[paths.shift()] = value;\r\n            } else {\r\n                v = v[paths.shift()];\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n};\r\n\r\nfunction addEvent($el, eventName, handler, useCapture) {\r\n    if ($el.addEventListener) {\r\n        $el.addEventListener(eventName, handler, !!useCapture);\r\n    } else {\r\n        if (eventName === 'input') {\r\n            eventName = 'propertychange';\r\n        }\r\n        $el.attachEvent('on' + eventName, handler);\r\n    }\r\n}\r\n\r\nfunction flatten(root, objectFilter, clean) {\r\n    objectFilter = objectFilter || function () { return true; };\r\n    var ext = {};\r\n    each(root, function (v, p) {\r\n        if (isObject(v) && !objectFilter(v)) {\r\n            var f = flatten(v, objectFilter, clean);\r\n            each(f, function (vv, pp) {\r\n                ext[p + '.' + pp] = vv;\r\n            });\r\n        } else {\r\n            if (objectFilter(v) || !clean) {\r\n                ext[p] = v;\r\n            }\r\n        }\r\n    })\r\n    return ext;\r\n}\r\n\r\nexport {\r\n    gid,\r\n    isBoolean,\r\n    isNumber,\r\n    isNumeric,\r\n    isString,\r\n    isFunction,\r\n    isObject,\r\n    isArray,\r\n    isBasic,\r\n    isInstance,\r\n    isDirectInstance,\r\n    isNode,\r\n    isNamedNodeMap,\r\n    isEventName,\r\n    isCSSSelector,\r\n    each,\r\n    eachIndexOf,\r\n    eachUnique,\r\n    unique,\r\n    clone,\r\n    hasProperty,\r\n    clear,\r\n    shrinkArray,\r\n    touchLeaves,\r\n    extend,\r\n    allRefs,\r\n    refData,\r\n    addEvent,\r\n    flatten\r\n}\r\n","import * as Util from './Util'\r\n\r\nvar Store = {};\r\nvar Dnstreams = {};\r\nvar ResultsIn = {};\r\nvar Upstreams = {};\r\nvar ResultsFrom = {};\r\nvar Laziness = {};\r\nvar PropKernelTable = {};\r\nvar KernelStatus = {};\r\nvar GetterSetter = {};\r\n\r\nvar definePropertyFeature = !!Object.defineProperty;\r\nvar useDefineProperty = false && definePropertyFeature;\r\n\r\nfunction defineProperty(target, prop, desc, proppath) {\r\n    if (useDefineProperty) {\r\n        Object.defineProperty(target, prop, desc);\r\n    } else {\r\n        if ('value' in desc) {\r\n            target[prop] = desc.value;\r\n        }\r\n        proppath = proppath || fullpathOf(prop, target);\r\n        if (!GetterSetter[proppath] && ('get' in desc || 'set' in desc)) GetterSetter[proppath] = {};\r\n        if ('get' in desc) {\r\n            GetterSetter[proppath].get = desc.get;\r\n        }\r\n        if ('set' in desc) {\r\n            GetterSetter[proppath].set = desc.set;\r\n        }\r\n    }\r\n}\r\n\r\nfunction fullpathOf(ref, root) {\r\n    if (root === undefined) return ref;\r\n    var pre = register(root);\r\n    if (pre == null) return ref || '';\r\n    return pre + (ref ? ('.' + ref) : '');\r\n}\r\n\r\nfunction register(root) {\r\n    if (root === Store || (!Util.isObject(root) && !Util.isNode(root))) return null;\r\n    if (!root.__kernel_root) {\r\n        var id = 'kr_' + Util.gid();\r\n        if (!Util.isNode(root)) {\r\n            defineProperty(root, '__kernel_root', {\r\n                value: id\r\n            });\r\n        } else {\r\n            root.__kernel_root = id;\r\n        }\r\n        Store[id] = root;\r\n    }\r\n    return root.__kernel_root;\r\n}\r\n\r\nfunction formatStream(stream, root) {\r\n    if (Util.isObject(stream) || Util.isString(stream)) stream = [stream];\r\n    if (Util.isArray(stream)) {\r\n        return stream.map(function (a) {\r\n            if (Util.isObject(a)) return register(a.root) + '.' + a.alias;\r\n            if (Util.isString(a)) return register(root) + '.' + a;\r\n            return null;\r\n        });\r\n    } else {\r\n        return [];\r\n    }\r\n}\r\n\r\nfunction propKernelOrder(proppath) {\r\n    if (PropKernelTable[proppath] === undefined) return 0;\r\n    return PropKernelTable[proppath].length;\r\n}\r\n\r\n/**\r\n * Kernel constructor function.\r\n * @constructor\r\n */\r\nfunction Kernel(root, path, relations) {\r\n    var obj = {};\r\n    var value;\r\n    if (useDefineProperty) {\r\n        obj = scopeOf(path, root);\r\n        if (obj == null) return;\r\n        value = obj.target[obj.property];\r\n    }\r\n\r\n    var proppath = register(root) + '.' + path;\r\n    var __kid = proppath + '#' + propKernelOrder(proppath);\r\n    defineProperty(this, '__kid', {\r\n        value: __kid\r\n    });\r\n    KernelStatus[this.__kid] = 1;\r\n    if (PropKernelTable[proppath] === undefined) {\r\n        PropKernelTable[proppath] = [];\r\n        if (useDefineProperty && Util.hasProperty(obj.target, obj.property)) {\r\n            delete obj.target[obj.property];\r\n        }\r\n    }\r\n    PropKernelTable[proppath].push(1);\r\n\r\n    var dnstream = formatStream(relations.dnstream, root);\r\n    var resultIn = relations.resultIn;\r\n    var upstream = formatStream(relations.upstream, root);\r\n    var resultFrom = relations.resultFrom;\r\n    var lazy = !!relations.lazy;\r\n    if (!Dnstreams[proppath]) Dnstreams[proppath] = {};\r\n    dnstream.forEach(function (p) {\r\n        if (!Upstreams[p]) Upstreams[p] = {};\r\n        if (!Upstreams[p][proppath]) Upstreams[p][proppath] = {};\r\n        Upstreams[p][proppath][__kid] = 1;\r\n        if (!Dnstreams[proppath][p]) Dnstreams[proppath][p] = {};\r\n        Dnstreams[proppath][p][__kid] = 1;\r\n    });\r\n    if (!ResultsIn[proppath]) ResultsIn[proppath] = [];\r\n    ResultsIn[proppath].push(Util.isFunction(resultIn) ? resultIn : null);\r\n    if (!Upstreams[proppath]) Upstreams[proppath] = {};\r\n    upstream.forEach(function (p) {\r\n        if (!Upstreams[proppath][p]) Upstreams[proppath][p] = {};\r\n        Upstreams[proppath][p][__kid] = 1;\r\n        if (!Dnstreams[p]) Dnstreams[p] = {};\r\n        if (!Dnstreams[p][proppath]) Dnstreams[p][proppath] = {};\r\n        Dnstreams[p][proppath][__kid] = 1;\r\n    });\r\n    if (Util.isFunction(resultFrom)) {\r\n        ResultsFrom[proppath] = {\r\n            f: resultFrom,\r\n            k: this.__kid,\r\n            deps: upstream\r\n        };\r\n    }\r\n    if (lazy) Laziness[proppath] = true;\r\n\r\n    if (PropKernelTable[proppath].length === 1) {\r\n        defineProperty(obj.target, obj.property, {\r\n            get: function (target, property) {\r\n                if (ResultsFrom[proppath] && KernelStatus[ResultsFrom[proppath].k] !== 0) {\r\n                    var v = ResultsFrom[proppath].f.apply(\r\n                        null,\r\n                        ResultsFrom[proppath].deps.map(function (p) { return Data(null, p); })\r\n                    );\r\n                    Data(null, proppath, v);\r\n                    value = v;\r\n                } else {\r\n                    if (!useDefineProperty) {\r\n                        if (property !== undefined) {\r\n                            value = target[property];\r\n                        } else {\r\n                            obj = scopeOf(proppath);\r\n                            value = obj.target[obj.property];\r\n                        }\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            set: function (val, target, property) {\r\n                if (val === value) return;\r\n                value = val;\r\n                if (!useDefineProperty) {\r\n                    if (property !== undefined) {\r\n                        target[property] = val;\r\n                    } else {\r\n                        obj = scopeOf(proppath);\r\n                        obj.target[obj.property] = val;\r\n                    }\r\n                }\r\n                ResultsIn[proppath] && ResultsIn[proppath].forEach(function (f, k) {\r\n                    f && (KernelStatus[proppath + '#' + k] !== 0) && f.apply(root, [val]);\r\n                });\r\n                if (Dnstreams[proppath]) {\r\n                    Util.each(Dnstreams[proppath], function (kmap, ds) {\r\n                        var toUpdateDnstream = false;\r\n                        Util.each(kmap, function (v, k) {\r\n                            if (KernelStatus[k] !== 0) {\r\n                                toUpdateDnstream = true;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        toUpdateDnstream && ResultsFrom[ds] && !Laziness[ds] && Data(null, ds);\r\n                    });\r\n                }\r\n            },\r\n            // configurable: true,\r\n            enumerable: true\r\n        }, proppath);\r\n    }\r\n\r\n    if (Util.hasProperty(relations, 'value')) {\r\n        Data(null, proppath, relations.value);\r\n    }\r\n}\r\n\r\nKernel.prototype.disable = function () {\r\n    KernelStatus[this.__kid] = 0;\r\n};\r\nKernel.prototype.enable = function () {\r\n    KernelStatus[this.__kid] = 1;\r\n};\r\nKernel.prototype.destroy = function () {\r\n    // TODO\r\n};\r\n\r\n/**\r\n * Whether an object is a relation definition.\r\n * @param {Object} obj \r\n * @return {Boolean}\r\n */\r\nfunction isRelationDefinition(obj) {\r\n    if (!Util.isObject(obj)) return false;\r\n    var r = true;\r\n    var specProps = {\r\n        __isRelation: 2, // !\r\n        dnstream: 1, // *\r\n        resultIn: 1, // *\r\n        upstream: 1, // *\r\n        resultFrom: 1, // *\r\n        lazy: true,\r\n        value: true\r\n    };\r\n    var count = 0;\r\n    Util.each(obj, function (v, p) {\r\n        if (specProps[p] === 2) {\r\n            r = true;\r\n            count++;\r\n            return false;\r\n        }\r\n        if (!specProps[p]) {\r\n            r = false;\r\n            return false;\r\n        }\r\n        if (specProps[p] === 1) {\r\n            count++;\r\n        }\r\n    });\r\n    return r && (count > 0);\r\n}\r\n\r\n/**\r\n * Define and bind data with relations in a whole (PropertyPath => Relation) map.\r\n * @param {Object} obj                  The data object. If `relations` is undefined, it contains relations.\r\n * @param {Object|Undefined} relations  A map from propertyPath to relation.\r\n */\r\nfunction Relate(obj, relations) {\r\n    var fr;\r\n    if (arguments.length === 1) {\r\n        if (!Util.isObject(obj)) return null;\r\n        fr = Util.flatten(obj, isRelationDefinition, true);\r\n    } else if (Util.isObject(relations)) {\r\n        fr = Util.flatten(relations, isRelationDefinition, true);\r\n    } else {\r\n        return null;\r\n    }\r\n    Util.each(fr, function (rel, p) {\r\n        new Kernel(obj, p, rel);\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\n/**\r\n * Get the target and property.\r\n * @param {String} ref \r\n * @param {Object} root \r\n */\r\nfunction scopeOf(ref, root) {\r\n    if (root === undefined) root = Store;\r\n    if ((!Util.isObject(root) && !Util.isNode(root)) || !Util.isString(ref)) return null;\r\n    var fullpath = fullpathOf(ref, root);\r\n    var lastDot = fullpath.lastIndexOf('.');\r\n    return {\r\n        target: Data(null, fullpath.substring(0, lastDot)),\r\n        property: fullpath.substring(lastDot + 1)\r\n    };\r\n}\r\n\r\n/**\r\n * Get or set data, and trigger getters or setters.\r\n */\r\nfunction Data(root, refPath, value) {\r\n    root = root || Store;\r\n    var toSet = arguments.length >= 3;\r\n    var v = root;\r\n    var proppath = fullpathOf(null, root);\r\n    var paths = [];\r\n    if (refPath) paths = refPath.split('.');\r\n    var p;\r\n\r\n    while (paths.length) {\r\n        if (Util.isBasic(v)) return undefined;\r\n        p = paths.shift();\r\n        proppath += (proppath === '' ? '' : '.') + p;\r\n        if (toSet && paths.length === 0) { /* set */\r\n            if (!useDefineProperty && GetterSetter[proppath] && GetterSetter[proppath].set) {\r\n                GetterSetter[proppath].set(value, v, p);\r\n            }\r\n            v[p] = value;\r\n        } else { /* get */\r\n            if (!useDefineProperty && GetterSetter[proppath] && GetterSetter[proppath].get) {\r\n                v = GetterSetter[proppath].get(v, p);\r\n            } else {\r\n                v = v[p];\r\n            }\r\n        }\r\n    }\r\n    return toSet ? value : v;\r\n}\r\n\r\nexport { Kernel, Relate, Data }\r\n","import * as Util from './Util'\r\nimport { Data } from './Kernel'\r\n\r\n/**\r\n * Default configurations.\r\n * @type {Object}\r\n */\r\nvar conf = {\r\n    refBeginsWithDollar: true,\r\n    attrsFlag: 'attrs.'\r\n};\r\n\r\n/**\r\n * Execute a function with a data object as the scope.\r\n * @param {String} expr \r\n * @param {Object} ref \r\n * @param {*} target \r\n */\r\nfunction executeFunctionWithScope(expr, ref, target) {\r\n    var params = Object.keys(ref);\r\n    if (conf.refBeginsWithDollar) {\r\n        params = params.map(function (r) {\r\n            return '$' + r;\r\n        });\r\n    }\r\n    var args = Object.values(ref);\r\n    // Util.each(args, function (v, i) {\r\n    //     if (Util.isFunction(v)) {\r\n    //         args[i] = v.bind(ref);\r\n    //     }\r\n    // });\r\n    return (new Function(params.join(','), 'return (' + expr + ')')).apply(target || ref, args);\r\n}\r\n\r\n/**\r\n * Evaluate an expression with a data object.\r\n * @param {String} expr \r\n * @param {Object} ref \r\n * @return {*}\r\n */\r\nfunction evaluateExpression(expr, ref) {\r\n    expr = replaceTmplInStrLiteral(expr);\r\n    var result = null;\r\n    try {\r\n        result = executeFunctionWithScope(expr, ref);\r\n    } catch (e) {}\r\n    return result;\r\n}\r\n\r\n/**\r\n * Fix template strings in a string literal to JavaScript string-concat expressions.\r\n * @param {String} str \r\n * @return {String}\r\n * @example \"'My name is {{name}}.'\" => \"'My name is ' + (name) + '.'\"\r\n */\r\nfunction replaceTmplInStrLiteral(str) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    return str.replace(reg, function (match, p1) {\r\n        return '\\' + (' + p1 + ') + \\'';\r\n    });\r\n}\r\n\r\n/**\r\n * Evaluate a raw text with template expressions.\r\n * @param {String} text \r\n * @param {Object} ref \r\n * @return {String}\r\n * @example ('My name is {{name}}.', { name: 'Tom' }) => 'My name is Tom.'\r\n */\r\nfunction evaluateRawTextWithTmpl(text, ref) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    var result = text.replace(reg, function (match, p1) {\r\n        return evaluateExpression(p1, ref);\r\n    });\r\n    return result;\r\n}\r\n\r\n/**\r\n * Parse reference paths from an expression string.\r\n * @param {String} expr \r\n * @return {Array<String>}\r\n */\r\nfunction parseRefsInExpr(expr) {\r\n    expr = ';' + expr + ';';\r\n    var reg;\r\n    if (conf.refBeginsWithDollar) {\r\n        reg = /\\$([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\r\n        return expr.match(reg).map(function (r) {\r\n            return r.substr(1);\r\n        });\r\n    } else {\r\n        reg = /([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\r\n        return expr.match(reg);\r\n    }\r\n}\r\n\r\n/**\r\n * Parse `each` template expression from an attribute value string.\r\n * @param {String} expr \r\n */\r\nfunction parseEachExpr(expr) {\r\n    // TODO\r\n}\r\n\r\n/**\r\n * Parse template expression strings from a raw text such as a text node value.\r\n * @param {String} text     [description]\r\n * @return {Array<String>}  [description]\r\n * @example 'My name is {{name}}. I\\'m {{age}} years old.' => ['name', 'age']\r\n */\r\nfunction parseExprsInRawText(text) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    var exprs = [];\r\n    text.replace(reg, function (match, p1) {\r\n        exprs.push(p1);\r\n        return '';\r\n    });\r\n    return exprs;\r\n}\r\n\r\n/**\r\n * Get relations from an expression string to the data, and apply in time as well.\r\n * @param {String}      expr \r\n * @param {Object}      ref \r\n * @param {Function}    resultFrom \r\n * @return {Object}\r\n */\r\nfunction relationFromExprToRef(expr, ref, target, proppath, resultFrom) {\r\n    function getAllRefs(expr, ref) {\r\n        var subData = {};\r\n        Util.each(parseRefsInExpr(expr), function (r) {\r\n            subData[r] = Data(ref, r);\r\n        });\r\n        return Util.allRefs(subData);\r\n    }\r\n    var targetIsNode = Util.isNode(target);\r\n    var resultIn = function () {\r\n        var result = (resultFrom || function () {\r\n            return evaluateExpression(expr, ref);\r\n        })();\r\n\r\n        /* Transformation */\r\n        if (targetIsNode && proppath === 'className') {\r\n            var classList = [];\r\n            if (Util.isObject(result)) {\r\n                Util.each(result, function (v, p) {\r\n                    v && classList.push(p);\r\n                });\r\n            } else if (Util.isArray(result)) {\r\n                Util.each(result, function (v) {\r\n                    if (Util.isString(v)) classList.push(v);\r\n                    else if (Util.isObject(v)) {\r\n                        Util.each(v, function (vv, pp) {\r\n                            vv && classList.push(pp);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            result = classList.join(' ');\r\n        } else if (targetIsNode && proppath === 'style.cssText') {\r\n            var stylePairs = [];\r\n            if (Util.isObject(result)) {\r\n                Util.each(result, function (v, p) {\r\n                    stylePairs.push(p + ':' + v);\r\n                });\r\n            }\r\n            result = stylePairs.join(';');\r\n        }\r\n\r\n        if (targetIsNode && proppath.startsWith(conf.attrsFlag)) {\r\n            if (result != null) {\r\n                var attrName = proppath.substr(conf.attrsFlag.length);\r\n                target.setAttribute(attrName, result);\r\n            }\r\n        } else {\r\n            Data(target, proppath, result);\r\n        }\r\n    };\r\n    var r = {};\r\n    var ar = getAllRefs(expr, ref);\r\n    ar.forEach(function (ref) {\r\n        r[ref] = {\r\n            resultIn: resultIn\r\n        };\r\n    });\r\n    resultIn();\r\n    return r;\r\n}\r\n\r\nexport {\r\n    conf,\r\n    relationFromExprToRef,\r\n    executeFunctionWithScope,\r\n    parseExprsInRawText,\r\n    evaluateRawTextWithTmpl\r\n}\r\n","// import './Polyfill'\r\nimport * as Util from './Util'\r\nimport { Kernel, Relate, Data } from './Kernel'\r\nimport * as Parser from './Parser'\r\n\r\n/**\r\n * Default configurations.\r\n * @type {Object}\r\n */\r\nvar conf = {\r\n    attrPrefix: 'm-',\r\n    domBoundFlag: '__dmd_bound'\r\n};\r\n\r\n/**\r\n * Bind data to DOM.\r\n * @param  {HTMLElement} $el            [description]\r\n * @param  {Object} ref                 [description]\r\n * @return {[type]}                     [description]\r\n */\r\nfunction Bind($el, ref) {\r\n    if (!Util.isNode($el) || !Util.isObject(ref)) return;\r\n\r\n    if ($el.nodeType === Node.ELEMENT_NODE && !$el[conf.domBoundFlag]) {\r\n        $el[conf.domBoundFlag] = true; /* Set a binding flag. */\r\n        var attrList = [];\r\n        Util.each($el.attributes, function (value, name) {\r\n            if (!name.startsWith(conf.attrPrefix)) return;\r\n            attrList.push(name);\r\n            name = name.substr(conf.attrPrefix.length).toLowerCase();\r\n            switch (name) {\r\n            case 'value':\r\n                Util.addEvent($el, 'input', function (e) {\r\n                    Data(ref, Parser.conf.refBeginsWithDollar ? value.substr(1) : value, this.value);\r\n                }, false);\r\n                Relate(ref, Parser.relationFromExprToRef(value, ref, $el, name));\r\n                break;\r\n            case 'innertext':\r\n            case 'innerhtml':\r\n                Relate(ref, Parser.relationFromExprToRef(value, ref, $el, (name === 'innertext') ? 'innerText' : 'innerHTML'));\r\n                break;\r\n            case 'class':\r\n                Relate(ref, Parser.relationFromExprToRef(value, ref, $el, 'className'));\r\n                break;\r\n            case 'style':\r\n                Relate(ref, Parser.relationFromExprToRef(value, ref, $el, 'style.cssText'));\r\n                break;\r\n            case 'each':\r\n                // TODO\r\n                break;\r\n            default:\r\n                var eventName = Util.isEventName(name);\r\n                if (eventName) { /* Event */\r\n                    Util.addEvent($el, eventName, function (e) {\r\n                        Parser.executeFunctionWithScope(value, ref, $el);\r\n                    }, false);\r\n                } else { /* Attribute */\r\n                    Relate(ref, Parser.relationFromExprToRef(value, ref, $el, Parser.conf.attrsFlag + name));\r\n                }\r\n            }\r\n        });\r\n        Util.each(attrList, function (name) {\r\n            $el.removeAttribute(name);\r\n        });\r\n        Util.each($el, function (node) {\r\n            Bind(node, ref);\r\n        });\r\n    } else if ($el.nodeType === Node.TEXT_NODE) {\r\n        var tmpl = $el.nodeValue;\r\n        var expr = Parser.parseExprsInRawText(tmpl).join(';');\r\n        if (expr === '') return;\r\n        Relate(ref, Parser.relationFromExprToRef(expr, ref, $el, 'nodeValue', function () {\r\n            return Parser.evaluateRawTextWithTmpl(tmpl, ref);\r\n        }));\r\n    }\r\n}\r\n\r\n/**\r\n * Unbind data from DOM.\r\n * @param       {[type]} $el      [description]\r\n * @param       {[type]} ref      [description]\r\n * @param       {[type]} relation [description]\r\n * @constructor\r\n */\r\nfunction Unbind($el, ref, relation) {\r\n    // TODO\r\n}\r\n\r\n/**\r\n * Constructor.\r\n * @param {*}  \r\n * @param {*} ref \r\n */\r\nvar DMD = function ($el, ref) {\r\n    Bind.call(this, $el, ref);\r\n};\r\n\r\nDMD.kernel = Kernel;\r\nDMD.relate = Relate;\r\nDMD.$ = Data;\r\n\r\nexport default DMD\r\n"],"names":["addEvent","$el","eventName","handler","useCapture","addEventListener","attachEvent","flatten","root","objectFilter","clean","ext","each","v","p","isObject","f","vv","pp","defineProperty","target","prop","desc","proppath","useDefineProperty","Object","value","fullpathOf","GetterSetter","get","set","ref","undefined","pre","register","Store","Util.isObject","Util.isNode","__kernel_root","id","Util.gid","formatStream","stream","Util.isString","Util.isArray","map","a","alias","propKernelOrder","PropKernelTable","length","Kernel","path","relations","obj","scopeOf","property","__kid","this","KernelStatus","Util.hasProperty","push","dnstream","resultIn","upstream","resultFrom","lazy","Dnstreams","forEach","Upstreams","ResultsIn","Util.isFunction","ResultsFrom","k","deps","Laziness","apply","Data","val","Util.each","kmap","ds","toUpdateDnstream","enumerable","isRelationDefinition","r","specProps","__isRelation","count","Relate","fr","arguments","Util.flatten","rel","fullpath","lastDot","lastIndexOf","substring","refPath","toSet","paths","split","Util.isBasic","shift","executeFunctionWithScope","expr","params","keys","conf","refBeginsWithDollar","args","values","Function","join","evaluateExpression","replaceTmplInStrLiteral","result","e","str","reg","replace","match","p1","evaluateRawTextWithTmpl","text","parseRefsInExpr","substr","parseExprsInRawText","exprs","relationFromExprToRef","targetIsNode","classList","stylePairs","startsWith","attrsFlag","attrName","setAttribute","subData","Util.allRefs","getAllRefs","Bind","nodeType","Node","ELEMENT_NODE","domBoundFlag","TEXT_NODE","tmpl","nodeValue","Parser.parseExprsInRawText","Parser.relationFromExprToRef","Parser.evaluateRawTextWithTmpl","attrList","attributes","name","attrPrefix","toLowerCase","Util.addEvent","Parser.conf","Util.isEventName","Parser.executeFunctionWithScope","removeAttribute","node","gid","n","isNumeric","parseInt","isNaN","isString","isFunction","prototype","toString","call","isArray","isBasic","isNode","isNamedNodeMap","NamedNodeMap","isEventName","func","arrayReverse","i","len","hasOwnProperty","ret","COMMENT_NODE","PROCESSING_INSTRUCTION_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","childNodes","hasProperty","allRefs","refs","disable","enable","destroy","DMD","kernel","relate","$"],"mappings":"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"}