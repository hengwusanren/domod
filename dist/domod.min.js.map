{"version":3,"file":"domod.min.js","sources":["../src/Util.js","../src/OArray.js","../src/Kernel.js","../src/Parser.js","../src/index.js","../src/Polyfill.js"],"sourcesContent":["var gid = (function () {\r\n    var n = 0;\r\n    return function () {\r\n        return n++;\r\n    };\r\n})();\r\n\r\nvar isBoolean = function (v) {\r\n    return typeof v === 'boolean';\r\n};\r\n\r\nvar isNumber = function (v) {\r\n    return typeof v === 'number';\r\n};\r\n\r\nvar isNumeric = function (v) {\r\n    var n = parseInt(v);\r\n    if (isNaN(n)) return false;\r\n    return (typeof v === 'number' || typeof v === 'string') && n == v;\r\n};\r\n\r\nvar isString = function (v) {\r\n    return typeof v === 'string';\r\n};\r\n\r\nvar isFunction = function (v) {\r\n    return typeof v === 'function';\r\n};\r\n\r\nvar isObject = function (v) {\r\n    return v != null && !(v instanceof Array) && Object.prototype.toString.call(v) === '[object Object]';\r\n};\r\n\r\nvar isArray = function (v) {\r\n    return Object.prototype.toString.call(v) === '[object Array]';\r\n};\r\n\r\nvar isLikeArray = function (v) {\r\n    return v instanceof Array;\r\n};\r\n\r\nvar isBasic = function (v) {\r\n    return v == null\r\n        || typeof v === 'boolean'\r\n        || typeof v === 'number'\r\n        || typeof v === 'string'\r\n        || typeof v === 'function';\r\n};\r\n\r\nvar isInstance = function (v, creator) {\r\n    return typeof creator === 'function' && v instanceof creator;\r\n};\r\n\r\nvar isDirectInstance = function (v, creator) {\r\n    return v.constructor === creator;\r\n};\r\n\r\nvar isNode = function (v) {\r\n    if (typeof Node !== 'function') return false;\r\n    return v instanceof Node;\r\n};\r\n\r\nvar isNamedNodeMap = function (v) {\r\n    return v instanceof NamedNodeMap;\r\n};\r\n\r\nvar isEventName = function (v) {\r\n    if (!isString(v) || !v.startsWith('on')) return false;\r\n    return v.substr(2); // TODO\r\n};\r\n\r\nvar isCSSSelector = function (v) {\r\n    return v.indexOf(' ') > 0 || v.indexOf('.') >= 0\r\n        || v.indexOf('[') >= 0 || v.indexOf('#') >= 0;\r\n};\r\n\r\nvar each = function (v, func, arrayReverse) {\r\n    var i;\r\n    var len;\r\n    if (!isArray(v) && isFunction(v.forEach)) {\r\n        v.forEach(func);\r\n    } else if (isObject(v)) {\r\n        for (var p in v) {\r\n            if (!v.hasOwnProperty(p)) continue;\r\n            if (func(v[p], p) === false) break;\r\n        }\r\n    } else if (isLikeArray(v)) {\r\n        if (!arrayReverse) {\r\n            for (i = 0, len = v.length; i < len; i++) {\r\n                if (func(v[i], i) === false) break;\r\n            }\r\n        } else {\r\n            for (i = v.length - 1; i >= 0; i--) {\r\n                if (func(v[i], i) === false) break;\r\n            }\r\n        }\r\n    } else if (isNode(v)) {\r\n        var ret = false;\r\n        switch (v.nodeType) {\r\n        case Node.ELEMENT_NODE:\r\n            break;\r\n        case Node.TEXT_NODE:\r\n        case Node.COMMENT_NODE:\r\n        case Node.PROCESSING_INSTRUCTION_NODE:\r\n        case Node.DOCUMENT_NODE:\r\n        case Node.DOCUMENT_TYPE_NODE:\r\n        case Node.DOCUMENT_FRAGMENT_NODE:\r\n        default:\r\n            ret = true;\r\n        }\r\n        if (ret) return;\r\n        var childNodes = v.childNodes;\r\n        for (i = 0, len = childNodes.length; i < len; i++) {\r\n            func(childNodes[i]);\r\n            each(childNodes[i], func);\r\n        }\r\n    } else if (isNamedNodeMap(v)) {\r\n        for (i = 0, len = v.length; i < len; i++) {\r\n            if (func(v[i]['nodeValue'], v[i]['nodeName']) === false) break;\r\n        }\r\n    }\r\n};\r\n\r\nvar eachIndexOf = function (str, pat) {\r\n    var p0 = 0;\r\n    var p1;\r\n    var len = str.length;\r\n    var r = [];\r\n    while (p0 < len) {\r\n        p1 = str.indexOf(pat, p0);\r\n        if (p1 < len) {\r\n            r.push(p1);\r\n            p0 = p1 + pat.length;\r\n        }\r\n    }\r\n    return r;\r\n};\r\n\r\nvar eachUnique = function (arr, func) {\r\n    if (!isLikeArray(arr)) return;\r\n    var map = {};\r\n    for (var i = 0, len = arr.length; i < len; i++) {\r\n        var vi = arr[i];\r\n        if (!isNumber(vi) || !isString(vi) || map[vi]) continue;\r\n        map[vi] = true;\r\n        var r = func(vi);\r\n        if (r === false) break;\r\n    }\r\n};\r\n\r\nvar unique = function (arr) {\r\n    var r = [];\r\n    eachUnique(arr, function (v) {\r\n        r.push(v);\r\n    });\r\n    return r;\r\n};\r\n\r\nvar clone = function (val) {\r\n    var r = val;\r\n    if (isObject(val)) {\r\n        r = {};\r\n        each(val, function (v, p) {\r\n            r[p] = clone(v);\r\n        });\r\n    } else if (isLikeArray(val)) {\r\n        r = new val.constructor();\r\n        each(val, function (v) {\r\n            r.push(clone(v));\r\n        });\r\n    }\r\n    return r;\r\n};\r\n\r\nvar hasProperty = function (val, p) {\r\n    if (isObject(val)) {\r\n        return val.hasOwnProperty(p);\r\n    } else if (isLikeArray(val)) {\r\n        var n = parseInt(p);\r\n        return isNumeric(p) && val.length > n && n >= 0;\r\n    }\r\n    return false;\r\n};\r\n\r\nvar clear = function (val, p, withBasicVal) {\r\n    var inRef = isString(p) || isNumber(p);\r\n    var target = inRef ? val[p] : val;\r\n\r\n    if (isObject(target) || isLikeArray(target)) {\r\n        each(target, function (v, p) {\r\n            clear(target, p);\r\n        });\r\n        if (isLikeArray(target)) {\r\n            shrinkArray(target);\r\n        }\r\n    }\r\n\r\n    if (inRef) {\r\n        val[p] = withBasicVal;\r\n    }\r\n};\r\n\r\nvar shrinkArray = function (arr, len) {\r\n    var limited = isNumber(len);\r\n    if (!limited) {\r\n        each(arr, function (v, i) {\r\n            if (v == null) arr.pop();\r\n        }, true);\r\n    } else {\r\n        each(arr, function (v, i) {\r\n            if (i >= len) arr.pop();\r\n            else return false;\r\n        }, true);\r\n        while (arr.length < len) {\r\n            arr.push(null);\r\n        }\r\n    }\r\n    return arr;\r\n};\r\n\r\nvar touchLeaves = function (obj) {\r\n    each(obj, function (v, p) {\r\n        if (isBasic(v)) {\r\n            obj[p] = v;\r\n        } else {\r\n            touchLeaves(v);\r\n        }\r\n    });\r\n};\r\n\r\nvar extend = function (dest, srcs, clean, handler) {\r\n    if (!isObject(dest)) return srcs;\r\n    var args;\r\n    var argOffset = 0;\r\n    handler = undefined;\r\n    clean = false;\r\n    var lastArg = arguments[arguments.length - 1];\r\n    if (isFunction(lastArg)) {\r\n        argOffset = 2;\r\n        handler = lastArg;\r\n        clean = !!arguments[arguments.length - 2];\r\n    } else if (lastArg === true) {\r\n        argOffset = 1;\r\n        clean = lastArg;\r\n    }\r\n    args = Array.prototype.slice.call(arguments, 1, arguments.length - argOffset);\r\n\r\n    function extendObj(obj, src, clean) {\r\n        if (!isObject(src) && !isLikeArray(src)) return src;\r\n        if (isLikeArray(src)) {\r\n            if (!isLikeArray(obj)) return clone(src);\r\n            else {\r\n                obj.splice.apply(obj, [0, obj.length].concat(src));\r\n                return obj;\r\n            }\r\n        }\r\n        each(src, function (v, p) {\r\n            if (!hasProperty(obj, p) || isBasic(v)) {\r\n                if (obj[p] !== v) {\r\n                    obj[p] = clone(v);\r\n                }\r\n            } else {\r\n                obj[p] = extendObj(obj[p], v, clean);\r\n            }\r\n        });\r\n        if (clean) {\r\n            each(obj, function (v, p) {\r\n                if (!hasProperty(src, p)) {\r\n                    clear(obj, p);\r\n                }\r\n            });\r\n        }\r\n        return obj;\r\n    }\r\n\r\n    each(args, function (src) {\r\n        dest = extendObj(dest, src, clean);\r\n    });\r\n    return dest;\r\n};\r\n\r\nvar allRefs = function (obj) {\r\n    if (isLikeArray(obj)) return [];\r\n    var refs = [];\r\n    each(obj, function (v, p) {\r\n        refs.push(p);\r\n        if (isObject(v)) {\r\n            var f = allRefs(v);\r\n            each(f, function (pp) {\r\n                refs.push(p + '.' + pp);\r\n            });\r\n        }\r\n    })\r\n    return refs;\r\n};\r\n\r\nvar hasRef = function (root, refPath) {\r\n    var v = root;\r\n    var paths = refPath.split('.');\r\n    while (paths.length) {\r\n        var p = paths.shift();\r\n        if (!hasProperty(v, p)) return false;\r\n        v = v[p];\r\n    }\r\n    return true;\r\n};\r\n\r\nvar seekTarget = function (refPath, root) {\r\n    var args = Array.prototype.slice.call(arguments, 1);\r\n    var v;\r\n    for (var i = 0, len = args.length; i < len; i++) {\r\n        v = args[i];\r\n        if (isArray(v)) {\r\n            var r = seekTarget.apply(null, [refPath].concat(v));\r\n            if (r) return r;\r\n        } else {\r\n            if (hasRef(v, refPath)) return v;\r\n        }\r\n    }\r\n};\r\n\r\nvar seekTargetIndex = function (refPath, roots) {\r\n    var index = roots.length - 1;\r\n    each(roots, function (v, i) {\r\n        if (hasRef(v, refPath)) {\r\n            index = i;\r\n            return false;\r\n        }\r\n    });\r\n    return index;\r\n};\r\n\r\nvar refData = function (root, refPath, value) {\r\n    var toSet = arguments.length >= 3;\r\n    var v = root;\r\n    var paths = [];\r\n    if (refPath) paths = refPath.split('.');\r\n\r\n    if (!toSet) {\r\n        while (paths.length) {\r\n            if (isBasic(v)) return undefined;\r\n            v = v[paths.shift()];\r\n        }\r\n        return v;\r\n    } else {\r\n        while (paths.length) {\r\n            if (isBasic(v)) return undefined;\r\n            if (paths.length === 1) {\r\n                v[paths.shift()] = value;\r\n            } else {\r\n                v = v[paths.shift()];\r\n            }\r\n        }\r\n        return value;\r\n    }\r\n};\r\n\r\nfunction addEvent($el, eventName, handler, useCapture) {\r\n    if ($el.addEventListener) {\r\n        $el.addEventListener(eventName, handler, !!useCapture);\r\n    } else {\r\n        if (eventName === 'input') {\r\n            eventName = 'propertychange';\r\n        }\r\n        $el.attachEvent('on' + eventName, handler);\r\n    }\r\n}\r\n\r\nfunction flatten(root, objectFilter, clean) {\r\n    objectFilter = objectFilter || function () { return true; };\r\n    var ext = {};\r\n    each(root, function (v, p) {\r\n        if (isObject(v) && !objectFilter(v)) {\r\n            var f = flatten(v, objectFilter, clean);\r\n            each(f, function (vv, pp) {\r\n                ext[p + '.' + pp] = vv;\r\n            });\r\n        } else {\r\n            if (objectFilter(v) || !clean) {\r\n                ext[p] = v;\r\n            }\r\n        }\r\n    })\r\n    return ext;\r\n}\r\n\r\nexport {\r\n    gid,\r\n    isBoolean,\r\n    isNumber,\r\n    isNumeric,\r\n    isString,\r\n    isFunction,\r\n    isObject,\r\n    isArray,\r\n    isLikeArray,\r\n    isBasic,\r\n    isInstance,\r\n    isDirectInstance,\r\n    isNode,\r\n    isNamedNodeMap,\r\n    isEventName,\r\n    isCSSSelector,\r\n    each,\r\n    eachIndexOf,\r\n    eachUnique,\r\n    unique,\r\n    clone,\r\n    hasProperty,\r\n    clear,\r\n    shrinkArray,\r\n    touchLeaves,\r\n    extend,\r\n    allRefs,\r\n    hasRef,\r\n    seekTarget,\r\n    seekTargetIndex,\r\n    refData,\r\n    addEvent,\r\n    flatten\r\n}\r\n","import * as Util from './Util'\r\n\r\nvar canUseProxy = typeof Proxy === 'function';\r\n\r\nfunction defineProperty(target, prop, desc) {\r\n    if (Object.defineProperty) {\r\n        Object.defineProperty(target, prop, desc);\r\n    } else {\r\n        if ('value' in desc) {\r\n            target[prop] = desc.value;\r\n        }\r\n    }\r\n}\r\n\r\nfunction OArray(arr, option) {\r\n    if (Util.isObject(arr) && arguments.length === 1) option = arr;\r\n    if (!Util.isArray(arr)) arr = [];\r\n    if (!option) option = {};\r\n\r\n    defineProperty(this, '__data', {\r\n        value: arr\r\n    });\r\n\r\n    defineProperty(this, 'length', {\r\n        get: function () {\r\n            return arr.length;\r\n        },\r\n        set: function (v) {\r\n            arr.length = v;\r\n        }\r\n    });\r\n\r\n    var _this = this;\r\n\r\n    var eventNames = ['set', 'push', 'pop', 'unshift', 'shift', 'splice', 'resize'];\r\n    eventNames.forEach(function (e) {\r\n        defineProperty(_this, 'on' + e, { value: [] });\r\n    });\r\n    eventNames.forEach(function (e) {\r\n        _this.addEventListener(e, option['on' + e]);\r\n    });\r\n\r\n    Util.each(arr, function (v, i) {\r\n        _this.assignElement(i);\r\n    });\r\n}\r\n\r\nOArray.prototype = [];\r\nOArray.prototype.constructor = OArray;\r\n\r\nOArray.prototype.addEventListener = function (eventName, handler) {\r\n    var _this = this;\r\n    if (Util.isObject(eventName)) {\r\n        Util.each(eventName, function (hdl, evt) {\r\n            _this.addEventListener(evt, hdl);\r\n        });\r\n        return;\r\n    }\r\n    if (!this['on' + eventName] || !Util.isFunction(handler)) return;\r\n    this['on' + eventName].push(handler);\r\n};\r\nOArray.prototype.on = OArray.prototype.addEventListener;\r\n\r\nOArray.prototype.removeEventListener = function (eventName, handler) {\r\n    var _this = this;\r\n    if (Util.isObject(eventName)) {\r\n        Util.each(eventName, function (hdl, evt) {\r\n            _this.removeEventListener(evt, hdl);\r\n        });\r\n        return;\r\n    }\r\n    if (!this['on' + eventName] || !Util.isFunction(handler)) return;\r\n    var handlers = this['on' + eventName];\r\n    Util.each(handlers, function (h, i) {\r\n        if (h === handler) {\r\n            handlers.splice(i, 1);\r\n            return false;\r\n        }\r\n    });\r\n};\r\nOArray.prototype.off = OArray.prototype.removeEventListener;\r\n\r\nOArray.prototype.dispatchEvent = function (eventName, args) {\r\n    args = Array.prototype.slice.call(arguments, 1);\r\n    var _this = this;\r\n    Util.each(this['on' + eventName], function (handler) {\r\n        handler.apply(_this, args);\r\n    });\r\n};\r\nOArray.prototype.trigger = OArray.prototype.dispatchEvent;\r\n\r\nOArray.prototype.get = function (i) {\r\n    return this.__data[i];\r\n};\r\n\r\nOArray.prototype.set = function (i, v) {\r\n    var e = this.__data[i];\r\n    if (Util.isBasic(e) || Util.isBasic(v)) {\r\n        this.dispatchEvent('set', e, v, i, this.__data);\r\n        this.__data[i] = v;\r\n    } else {\r\n        Util.extend(e, v, true);\r\n    }\r\n};\r\n\r\nOArray.prototype.assignElement = function (i) {\r\n    defineProperty(this, i, {\r\n        get: function () {\r\n            return this.get(i);\r\n        },\r\n        set: function (val) {\r\n            this.set(i, val);\r\n        },\r\n        configurable: true,\r\n        enumerable: true\r\n    });\r\n};\r\nOArray.prototype.deleteElement = function () {\r\n    if (this.hasOwnProperty(this.length - 1)) delete this[this.length - 1];\r\n};\r\n\r\n['push', 'unshift'].forEach(function (f) {\r\n    OArray.prototype[f] = function (v) {\r\n        this.__data[f](v);\r\n        this.assignElement(this.length - 1);\r\n        this.dispatchEvent(f, v);\r\n        this.dispatchEvent('resize');\r\n    };\r\n});\r\n['pop', 'shift'].forEach(function (f) {\r\n    OArray.prototype[f] = function () {\r\n        this.dispatchEvent(f, this.__data[f === 'pop' ? (this.length - 1) : 0]);\r\n        this.deleteElement();\r\n        this.__data[f]();\r\n        this.dispatchEvent('resize');\r\n    };\r\n});\r\n\r\nOArray.prototype.toArray = function (notClone) {\r\n    return notClone ? this.__data : Util.clone(this.__data);\r\n};\r\n\r\nOArray.prototype.splice = function (startIndex, howManyToDelete, itemToInsert) {\r\n    if (!Util.isNumber(startIndex) || startIndex < 0) startIndex = 0;\r\n    if (startIndex >= this.length) startIndex = this.length;\r\n    if (!Util.isNumber(howManyToDelete) || howManyToDelete < 0) howManyToDelete = 0;\r\n    if (howManyToDelete + startIndex > this.length) howManyToDelete = this.length - startIndex;\r\n\r\n    var itemsToDelete = [];\r\n    for (var i = startIndex; i < startIndex + howManyToDelete; i++) {\r\n        itemsToDelete.push(Util.clone(this.get(i)));\r\n    }\r\n\r\n    var itemsToInsert = Array.prototype.slice.call(arguments, 2);\r\n    var howManyToInsert = itemsToInsert.length;\r\n\r\n    var howManyToSet = Math.min(howManyToDelete, howManyToInsert);\r\n    for (var j = startIndex; j < startIndex + howManyToSet; j++) {\r\n        this.set(j, itemsToInsert[j - startIndex]);\r\n    }\r\n\r\n    if (howManyToDelete === howManyToInsert) return;\r\n\r\n    var args;\r\n    if (howManyToDelete > howManyToInsert) {\r\n        args = [startIndex + howManyToInsert, howManyToDelete - howManyToInsert];\r\n        Array.prototype.splice.apply(this.__data, args);\r\n    } else {\r\n        args = [startIndex + howManyToDelete, 0].concat(itemsToInsert.slice(howManyToDelete));\r\n        Array.prototype.splice.apply(this.__data, args);\r\n    }\r\n    this.dispatchEvent.apply(this, ['splice'].concat(args));\r\n    this.dispatchEvent('resize');\r\n};\r\n\r\nOArray.prototype.forEach = function (fn) {\r\n    for (var i = 0; i < this.length; i++) {\r\n        var r = fn(this.get(i), i);\r\n        if (r === false) break;\r\n    }\r\n};\r\n\r\n['reverse', 'sort'].forEach(function (f) {\r\n    OArray.prototype[f] = function () {\r\n        var r = Util.clone(this.__data);\r\n        Array.prototype[f].apply(r, arguments);\r\n        for (var i = 0; i < this.length; i++) {\r\n            this.set(i, r[i]);\r\n        }\r\n    };\r\n});\r\n\r\n['slice', 'concat', 'filter', 'map', 'reduce',\r\n    'indexOf', 'find', 'findIndex', 'fill', 'join'].forEach(function (f) {\r\n    OArray.prototype[f] = function () {\r\n        return Array.prototype[f].apply(this.toArray(), arguments);\r\n    };\r\n});\r\n\r\nOArray.prototype.clear = function () {\r\n    while (this.length) {\r\n        this.pop();\r\n    }\r\n    return this;\r\n};\r\n\r\nOArray.prototype.cast = function (arr) {\r\n    return this.splice.apply(this, [0, this.length].concat(arr));\r\n};\r\n\r\nexport default OArray\r\n","import * as Util from './Util'\r\nimport OArray from './OArray'\r\n\r\nvar Store = {};\r\nvar Dnstreams = {};\r\nvar ResultsIn = {};\r\nvar Upstreams = {};\r\nvar ResultsFrom = {};\r\nvar Laziness = {};\r\nvar PropKernelTable = {};\r\nvar KernelStatus = {};\r\nvar GetterSetter = {};\r\nvar __ = {};\r\n\r\nfunction defineProperty(target, prop, desc, proppath) {\r\n    if (!Util.isNode(target)) {\r\n        if (Util.isInstance(target, OArray)) {\r\n            if (desc.set) {\r\n                target.on('set', function (oval, nval, i, arr) {\r\n                    if (i == prop) {\r\n                        desc.set(nval);\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            Object.defineProperty(target, prop, desc);\r\n        }\r\n    } else {\r\n        if ('value' in desc) {\r\n            target[prop] = desc.value;\r\n        }\r\n    }\r\n    proppath = proppath || fullpathOf(prop, target);\r\n    if (!GetterSetter[proppath] && ('get' in desc || 'set' in desc)) GetterSetter[proppath] = {};\r\n    if ('get' in desc) {\r\n        GetterSetter[proppath].get = desc.get;\r\n    }\r\n    if ('set' in desc) {\r\n        GetterSetter[proppath].set = desc.set;\r\n    }\r\n}\r\n\r\nfunction fullpathOf(ref, root) {\r\n    if (root === undefined) return ref;\r\n    var pre = register(root);\r\n    if (pre == null) return ref || '';\r\n    return pre + (ref ? ('.' + ref) : '');\r\n}\r\n\r\nfunction register(root) {\r\n    if (root === Store || (!Util.isObject(root) && !Util.isNode(root))) return null;\r\n    if (!root.__kernel_root) {\r\n        var id = 'kr_' + Util.gid();\r\n        defineProperty(root, '__kernel_root', {\r\n            value: id\r\n        });\r\n        Store[id] = root;\r\n    }\r\n    return root.__kernel_root;\r\n}\r\n\r\nfunction formatStream(stream, root) {\r\n    if (Util.isObject(stream) || Util.isString(stream)) stream = [stream];\r\n    if (Util.isArray(stream)) {\r\n        return stream.map(function (a) {\r\n            if (Util.isObject(a)) return register(a.root) + '.' + a.alias;\r\n            if (Util.isString(a)) return register(root) + '.' + a;\r\n            return null;\r\n        });\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction propKernelOrder(proppath) {\r\n    if (PropKernelTable[proppath] === undefined) return 0;\r\n    return PropKernelTable[proppath].length;\r\n}\r\n\r\n/**\r\n * Kernel constructor function.\r\n * @constructor\r\n */\r\nfunction Kernel(root, path, relations) {\r\n    var obj = {};\r\n    var value;\r\n    obj = scopeOf(path, root);\r\n    if (obj == null) return;\r\n    value = obj.target[obj.property];\r\n\r\n    var proppath = register(root) + '.' + path;\r\n    var __kid = proppath + '#' + propKernelOrder(proppath);\r\n    defineProperty(this, '__kid', {\r\n        value: __kid\r\n    });\r\n    KernelStatus[this.__kid] = 1;\r\n    if (PropKernelTable[proppath] === undefined) {\r\n        PropKernelTable[proppath] = [];\r\n        if (Util.hasProperty(obj.target, obj.property) && !Util.isInstance(obj.target, OArray)) {\r\n            delete obj.target[obj.property];\r\n        }\r\n    }\r\n    PropKernelTable[proppath].push(1);\r\n\r\n    var dnstream = formatStream(relations.dnstream, root);\r\n    var resultIn = relations.resultIn;\r\n    var upstream = formatStream(relations.upstream, root);\r\n    var resultFrom = relations.resultFrom;\r\n    var lazy = !!relations.lazy;\r\n    if (!Dnstreams[proppath]) Dnstreams[proppath] = {};\r\n    dnstream.forEach(function (p) {\r\n        if (!Upstreams[p]) Upstreams[p] = {};\r\n        if (!Upstreams[p][proppath]) Upstreams[p][proppath] = {};\r\n        Upstreams[p][proppath][__kid] = 1;\r\n        if (!Dnstreams[proppath][p]) Dnstreams[proppath][p] = {};\r\n        Dnstreams[proppath][p][__kid] = 1;\r\n    });\r\n    if (!ResultsIn[proppath]) ResultsIn[proppath] = [];\r\n    ResultsIn[proppath].push(Util.isFunction(resultIn) ? resultIn : null);\r\n    if (!Upstreams[proppath]) Upstreams[proppath] = {};\r\n    upstream.forEach(function (p) {\r\n        if (!Upstreams[proppath][p]) Upstreams[proppath][p] = {};\r\n        Upstreams[proppath][p][__kid] = 1;\r\n        if (!Dnstreams[p]) Dnstreams[p] = {};\r\n        if (!Dnstreams[p][proppath]) Dnstreams[p][proppath] = {};\r\n        Dnstreams[p][proppath][__kid] = 1;\r\n    });\r\n    if (Util.isFunction(resultFrom)) {\r\n        ResultsFrom[proppath] = {\r\n            f: resultFrom,\r\n            k: this.__kid,\r\n            deps: upstream\r\n        };\r\n    }\r\n    if (lazy) Laziness[proppath] = true;\r\n\r\n    if (PropKernelTable[proppath].length === 1) {\r\n        defineProperty(obj.target, obj.property, {\r\n            get: function () {\r\n                if (ResultsFrom[proppath] && KernelStatus[ResultsFrom[proppath].k] !== 0) {\r\n                    var v = ResultsFrom[proppath].f.apply(\r\n                        null,\r\n                        ResultsFrom[proppath].deps.map(function (p) { return Data(null, p); })\r\n                    );\r\n                    if (value !== v) {\r\n                        GetterSetter[proppath].set(v);\r\n                    }\r\n                }\r\n                return value;\r\n            },\r\n            set: function (val, force) {\r\n                if (!force && val === value) return;\r\n                if (val !== value) {\r\n                    if (Util.isInstance(obj.target, OArray) &&\r\n                        !(Util.isObject(value) && Util.isObject(val))) {\r\n                        obj.target.set(obj.property, val);\r\n                        value = obj.target[obj.property];\r\n                    } else {\r\n                        value = Util.extend(value, val);\r\n                    }\r\n                }\r\n\r\n                ResultsIn[proppath] && ResultsIn[proppath].forEach(function (f, k) {\r\n                    f && (KernelStatus[proppath + '#' + k] !== 0) && f.apply(root, [value]);\r\n                });\r\n                if (Dnstreams[proppath]) {\r\n                    Util.each(Dnstreams[proppath], function (kmap, ds) {\r\n                        var toUpdateDnstream = false;\r\n                        Util.each(kmap, function (v, k) {\r\n                            if (KernelStatus[k] !== 0) {\r\n                                toUpdateDnstream = true;\r\n                                return false;\r\n                            }\r\n                        });\r\n                        toUpdateDnstream && ResultsFrom[ds] && !Laziness[ds] && Data(null, ds);\r\n                    });\r\n                }\r\n            },\r\n            // configurable: true,\r\n            enumerable: true\r\n        }, proppath);\r\n    }\r\n\r\n    if (Util.hasProperty(relations, 'value')) {\r\n        Data(null, proppath, relations.value);\r\n    }\r\n}\r\n\r\nKernel.prototype.disable = function () {\r\n    KernelStatus[this.__kid] = 0;\r\n};\r\nKernel.prototype.enable = function () {\r\n    KernelStatus[this.__kid] = 1;\r\n};\r\nKernel.prototype.destroy = function () {};\r\n\r\n/**\r\n * Whether an object is a relation definition.\r\n * @param {Object} obj \r\n * @return {Boolean}\r\n */\r\nfunction isRelationDefinition(obj) {\r\n    if (!Util.isObject(obj)) return false;\r\n    var r = true;\r\n    var specProps = {\r\n        __isRelation: 2, // !\r\n        dnstream: 1, // *\r\n        resultIn: 1, // *\r\n        upstream: 1, // *\r\n        resultFrom: 1, // *\r\n        lazy: true,\r\n        value: true\r\n    };\r\n    var count = 0;\r\n    Util.each(obj, function (v, p) {\r\n        if (specProps[p] === 2) {\r\n            r = true;\r\n            count++;\r\n            return false;\r\n        }\r\n        if (!specProps[p]) {\r\n            r = false;\r\n            return false;\r\n        }\r\n        if (specProps[p] === 1) {\r\n            count++;\r\n        }\r\n    });\r\n    return r && (count > 0);\r\n}\r\n\r\n/**\r\n * Define and bind data with relations in a whole (PropertyPath => Relation) map.\r\n * @param {Object} obj                  The data object. If `relations` is undefined, it contains relations.\r\n * @param {Object|Undefined} relations  A map from propertyPath to relation.\r\n */\r\nfunction Relate(obj, relations) {\r\n    var fr;\r\n    if (arguments.length === 1) {\r\n        if (!Util.isObject(obj)) return null;\r\n        fr = Util.flatten(obj, isRelationDefinition, true);\r\n    } else if (Util.isObject(relations)) {\r\n        fr = Util.flatten(relations, isRelationDefinition, true);\r\n    } else {\r\n        return null;\r\n    }\r\n    Util.each(fr, function (rel, p) {\r\n        new Kernel(obj, p, rel);\r\n    });\r\n\r\n    return obj;\r\n}\r\n\r\n/**\r\n * Get the target and property.\r\n * @param {String} ref \r\n * @param {Object} root \r\n */\r\nfunction scopeOf(ref, root) {\r\n    if (root === undefined) root = Store;\r\n    if ((!Util.isObject(root) && !Util.isNode(root)) || !Util.isString(ref)) return null;\r\n    var fullpath = fullpathOf(ref, root);\r\n    var lastDot = fullpath.lastIndexOf('.');\r\n    var targetPath = fullpath.substring(0, lastDot);\r\n    var propPath = fullpath.substring(lastDot + 1);\r\n    var targetValue = Data(null, targetPath, __, true);\r\n    if (targetValue == null) {\r\n        targetValue = Data(null, targetPath, {}, true);\r\n    }\r\n    return {\r\n        target: targetValue,\r\n        property: propPath\r\n    };\r\n}\r\n\r\nfunction assign(proppath, src, obj) {\r\n    obj = obj || Data(null, proppath);\r\n    Util.each(src, function (v, p) {\r\n        var pp = proppath + '.' + p;\r\n        if (!Util.hasProperty(obj, p) || Util.isBasic(obj[p]) || Util.isBasic(v)) {\r\n            Data(null, pp, Util.clone(v));\r\n        } else {\r\n            assign(pp, v, obj[p]);\r\n        }\r\n    });\r\n}\r\n\r\n/**\r\n * Get or set data, and trigger getters or setters.\r\n */\r\nfunction Data(root, refPath, value, ensurePathValid) {\r\n    root = root || Store;\r\n    var toSet = arguments.length >= 3 && value !== __;\r\n    var v = root;\r\n    var proppath = fullpathOf(null, root);\r\n    var paths = [];\r\n    if (refPath) paths = refPath.split('.');\r\n    var parent;\r\n    var prop;\r\n\r\n    while (paths.length) {\r\n        if (ensurePathValid && v == null) {\r\n            parent[prop] = {};\r\n        } else if (Util.isBasic(v)) {\r\n            return undefined;\r\n        }\r\n        prop = paths.shift();\r\n        proppath += (proppath === '' ? '' : '.') + prop;\r\n        if (toSet && paths.length === 0) { /* set */\r\n            if (Util.isInstance(v, OArray) &&\r\n                !(Util.isObject(v[prop]) && Util.isObject(value))) {\r\n                v.set(prop, value);\r\n            } else {\r\n                v[prop] = Util.extend(v[prop], value);\r\n            }\r\n        } else { /* get */\r\n            parent = v;\r\n            v = v[prop];\r\n        }\r\n    }\r\n    return toSet ? v[prop] : v;\r\n}\r\n\r\nexport { Kernel, Relate, Data }\r\n","import * as Util from './Util'\r\nimport { Data } from './Kernel'\r\nimport OArray from './OArray'\r\n\r\n/**\r\n * Default configurations.\r\n * @type {Object}\r\n */\r\nvar conf = {\r\n    attrPrefix: 'm-',\r\n    refBeginsWithDollar: true,\r\n    attrsFlag: 'attrs.'\r\n};\r\n\r\n/**\r\n * DOM attribute names to bind.\r\n */\r\nvar domProp = {\r\n    'value': 'value',\r\n    'checked': 'checked',\r\n    'innertext': 'innerText',\r\n    'innerhtml': 'innerHTML',\r\n    'class': 'className',\r\n    'style': 'style.cssText'\r\n};\r\n\r\n/**\r\n * Regular expressions.\r\n */\r\nvar Regs = {\r\n    each11: /^\\s*(\\$([a-zA-Z$_][0-9a-zA-Z$_]*))\\s+in\\s+(\\$([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*)\\s*$/,\r\n    each12: /^\\s*\\(\\s*(\\$([a-zA-Z$_][0-9a-zA-Z$_]*))\\s*,\\s*(\\$([a-zA-Z$_][0-9a-zA-Z$_]*))\\s*\\)\\s+in\\s+(\\$([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*)\\s*$/,\r\n    each21: /^\\s*(([a-zA-Z$_][0-9a-zA-Z$_]*))\\s+in\\s+(([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*)\\s*$/,\r\n    each22: /^\\s*\\(\\s*(([a-zA-Z$_][0-9a-zA-Z$_]*))\\s*,\\s*(([a-zA-Z$_][0-9a-zA-Z$_]*))\\s*\\)\\s+in\\s+(([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*)\\s*$/\r\n};\r\n\r\n/**\r\n * Execute a function with a data object as the scope.\r\n * @param {String} expr \r\n * @param {Array} refs \r\n * @param {*} target \r\n * @return {*}\r\n */\r\nfunction executeFunctionWithScope(expr, refs, target) {\r\n    if (conf.refBeginsWithDollar) {\r\n        expr = expr.replace(/(\\$[a-zA-Z$_][0-9a-zA-Z$_]*)\\s*=[^=]/g, function (match, p1) {\r\n            return match.replace(p1, 'this.' + p1.substr(1));\r\n        });\r\n    }\r\n\r\n    if (Util.isArray(refs)) {\r\n        if (!target) target = refs[refs.length - 1];\r\n    } else {\r\n        refs = [refs];\r\n        if (!target) target = refs[0];\r\n    }\r\n\r\n    var ref = {};\r\n    Util.each(refs, function (r) {\r\n        Util.each(r, function (v, p) {\r\n            if (p in ref) return;\r\n            ref[p] = v;\r\n        });\r\n    });\r\n\r\n    var params = Object.keys(ref);\r\n    if (conf.refBeginsWithDollar) {\r\n        params = params.map(function (r) {\r\n            return '$' + r;\r\n        });\r\n    }\r\n    var args = Object.values(ref);\r\n    // Util.each(args, function (v, i) {\r\n    //     if (Util.isFunction(v)) {\r\n    //         args[i] = v.bind(ref);\r\n    //     }\r\n    // });\r\n    return (new Function(params.join(','), 'return (' + expr + ')')).apply(target, args);\r\n}\r\n\r\n/**\r\n * Evaluate an expression with a data object.\r\n * @param {String} expr \r\n * @param {Array} refs \r\n * @return {*}\r\n */\r\nfunction evaluateExpression(expr, refs) {\r\n    expr = replaceTmplInStrLiteral(expr);\r\n    var result = null;\r\n    try {\r\n        result = executeFunctionWithScope(expr, refs);\r\n    } catch (e) {}\r\n    return result;\r\n}\r\n\r\n/**\r\n * Fix template strings in a string literal to JavaScript string-concat expressions.\r\n * @param {String} str \r\n * @return {String}\r\n * @example \"'My name is {{name}}.'\" => \"'My name is ' + (name) + '.'\"\r\n */\r\nfunction replaceTmplInStrLiteral(str) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    return str.replace(reg, function (match, p1) {\r\n        return '\\' + (' + p1 + ') + \\'';\r\n    });\r\n}\r\n\r\n/**\r\n * Evaluate a raw text with template expressions.\r\n * @param {String} text \r\n * @param {Array} refs \r\n * @return {String}\r\n * @example ('My name is {{$name}}.', { name: 'Tom' }) => 'My name is Tom.'\r\n */\r\nfunction evaluateRawTextWithTmpl(text, refs) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    var result = text.replace(reg, function (match, p1) {\r\n        var result = null;\r\n        try {\r\n            result = executeFunctionWithScope(p1, refs);\r\n        } catch (e) {}\r\n        return result;\r\n    });\r\n    return result;\r\n}\r\n\r\n/**\r\n * Parse reference paths from an expression string.\r\n * @param {String} expr \r\n * @return {Array<String>}\r\n */\r\nfunction parseRefsInExpr(expr) {\r\n    expr = ';' + expr + ';';\r\n    var reg;\r\n    if (conf.refBeginsWithDollar) {\r\n        reg = /\\$([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\r\n        return expr.match(reg).map(function (r) {\r\n            return r.substr(1);\r\n        });\r\n    } else {\r\n        reg = /([a-zA-Z$_][0-9a-zA-Z$_]*)(\\.[a-zA-Z$_][0-9a-zA-Z$_]*)*/g;\r\n        return expr.match(reg);\r\n    }\r\n}\r\n\r\n/**\r\n * Parse `each` template expression from an attribute value string.\r\n * @param {String} expr \r\n * @param {Array} refs\r\n * @return {Object}\r\n */\r\nfunction parseEachExpr(expr, refs) {\r\n    var valStr;\r\n    var keyStr;\r\n    var targetStr;\r\n    var r;\r\n    if (conf.refBeginsWithDollar) {\r\n        r = Regs.each12.exec(expr);\r\n        if (r) {\r\n            valStr = r[1].substr(1);\r\n            keyStr = r[3].substr(1);\r\n            targetStr = r[5].substr(1);\r\n        } else {\r\n            r = Regs.each11.exec(expr);\r\n            valStr = r[1].substr(1);\r\n            targetStr = r[3].substr(1);\r\n        }\r\n    } else {\r\n        r = Regs.each22.exec(expr);\r\n        if (r) {\r\n            valStr = r[1];\r\n            keyStr = r[3];\r\n            targetStr = r[5];\r\n        } else {\r\n            r = Regs.each21.exec(expr);\r\n            valStr = r[1];\r\n            targetStr = r[3];\r\n        }\r\n    }\r\n    var root = Util.seekTarget(targetStr, refs);\r\n    var value = Data(root, targetStr);\r\n    if (!(value instanceof OArray)) {\r\n        value = new OArray(value);\r\n        Data(root, targetStr, value);\r\n    }\r\n    return {\r\n        target: value,\r\n        targetRef: targetStr,\r\n        iterator: {\r\n            val: valStr,\r\n            key: keyStr\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * Parse template expression strings from a raw text such as a text node value.\r\n * @param {String} text     [description]\r\n * @return {Array<String>}  [description]\r\n * @example 'My name is {{$name}}. I\\'m {{$age}} years old.' => ['$name', '$age']\r\n */\r\nfunction parseExprsInRawText(text) {\r\n    var reg = /{{([^{}]*)}}/g;\r\n    var exprs = [];\r\n    text.replace(reg, function (match, p1) {\r\n        exprs.push(p1);\r\n        return '';\r\n    });\r\n    return exprs;\r\n}\r\n\r\n/**\r\n * Get relations from an expression string to the data, and apply in time as well.\r\n * @param {String}      expr \r\n * @param {Array}       refs \r\n * @param {Function}    resultFrom \r\n * @return {Object}\r\n */\r\nfunction relationFromExprToRef(expr, refs, target, proppath, resultFrom) {\r\n    if (!Util.isArray(refs)) refs = [refs];\r\n\r\n    function getAllRefs(expr, refs) {\r\n        var refsInExpr = parseRefsInExpr(expr);\r\n        var subData = {};\r\n        Util.each(refsInExpr, function (r) {\r\n            var i = Util.seekTargetIndex(r, refs);\r\n            if (!subData[i]) subData[i] = {};\r\n            subData[i][r] = Data(refs[i], r);\r\n        });\r\n        var re = [];\r\n        Util.each(subData, function (s, i) {\r\n            re.push({\r\n                target: refs[i],\r\n                refs: Util.allRefs(s)\r\n            });\r\n        });\r\n        return re;\r\n    }\r\n\r\n    var targetIsNode = Util.isNode(target);\r\n    var resultIn = function () {\r\n        var result = (resultFrom || function () {\r\n            return evaluateExpression(expr, refs);\r\n        })();\r\n\r\n        /* Transformation */\r\n        if (targetIsNode && proppath === 'className') {\r\n            var classList = [];\r\n            if (Util.isObject(result)) {\r\n                Util.each(result, function (v, p) {\r\n                    v && classList.push(p);\r\n                });\r\n            } else if (Util.isArray(result)) {\r\n                Util.each(result, function (v) {\r\n                    if (Util.isString(v)) classList.push(v);\r\n                    else if (Util.isObject(v)) {\r\n                        Util.each(v, function (vv, pp) {\r\n                            vv && classList.push(pp);\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n            result = classList.join(' ');\r\n        } else if (targetIsNode && proppath === 'style.cssText') {\r\n            var stylePairs = [];\r\n            if (Util.isObject(result)) {\r\n                Util.each(result, function (v, p) {\r\n                    stylePairs.push(p + ':' + v);\r\n                });\r\n            }\r\n            result = stylePairs.join(';');\r\n        }\r\n\r\n        if (targetIsNode && proppath.startsWith(conf.attrsFlag)) {\r\n            if (result != null) {\r\n                var attrName = proppath.substr(conf.attrsFlag.length);\r\n                target.setAttribute(attrName, result);\r\n            }\r\n        } else {\r\n            Data(target, proppath, result);\r\n        }\r\n    };\r\n\r\n    var r = getAllRefs(expr, refs).map(function (a) {\r\n        return {\r\n            target: a.target,\r\n            relations: (function () {\r\n                var r = {};\r\n                a.refs.forEach(function (refpath) {\r\n                    r[refpath] = {\r\n                        resultIn: resultIn\r\n                    };\r\n                });\r\n                return r;\r\n            })()\r\n        };\r\n    });\r\n    resultIn();\r\n    return r;\r\n}\r\n\r\nexport {\r\n    conf,\r\n    domProp,\r\n    relationFromExprToRef,\r\n    executeFunctionWithScope,\r\n    parseExprsInRawText,\r\n    evaluateRawTextWithTmpl,\r\n    parseEachExpr\r\n}\r\n","import './Polyfill'\r\nimport * as Util from './Util'\r\nimport { Kernel, Relate, Data } from './Kernel'\r\nimport * as Parser from './Parser'\r\n\r\n/**\r\n * Default configurations.\r\n * @type {Object}\r\n */\r\nvar conf = {\r\n    domBoundFlag: '__dmd_bound',\r\n    domListKey: '__dmd_key'\r\n};\r\n\r\nfunction pathContains(path, ref) {\r\n    Util.each(ref, function (p, k) {\r\n        if (path === k || path.startsWith(k + '.')) return k;\r\n    });\r\n    return null;\r\n}\r\n\r\nvar domValueToBind = {\r\n    'input': 'input',\r\n    'select': 'change'\r\n};\r\n\r\n/**\r\n * Bind data to DOM.\r\n * @param  {HTMLElement} $el            [description]\r\n * @param  {Object} ref                 [description]\r\n * @param  {Array} ext                  [description]\r\n * @return {[type]}                     [description]\r\n */\r\nfunction Bind($el, ref, ext) {\r\n    if (!Util.isNode($el) || !Util.isObject(ref)) return null;\r\n    ext = ext ? (Util.isArray(ext) ? ext : [ext]) : []; /* Ensure `ext` is an array */\r\n    var scopes = ext.concat(ref);\r\n\r\n    var nodeName = $el.nodeName.toLowerCase();\r\n\r\n    if ($el.nodeType === Node.ELEMENT_NODE && !$el[conf.domBoundFlag]) {\r\n        $el[conf.domBoundFlag] = true; /* Set a binding flag. */\r\n\r\n        /* Bind a list */\r\n        if ($el.hasAttribute(Parser.conf.attrPrefix + 'each')) {\r\n            var eachAttrName = Parser.conf.attrPrefix + 'each';\r\n            var eachExprText = $el.getAttribute(eachAttrName);\r\n            var eachExpr = Parser.parseEachExpr(eachExprText, ref);\r\n            $el.removeAttribute(eachAttrName);\r\n            var $parent = $el.parentNode;\r\n            // $parent.removeChild($el);\r\n            $parent.innerHTML = '';\r\n\r\n            var $targetList = eachExpr.target;\r\n\r\n            function bindItem(v, k) {\r\n                var $copy = $el.cloneNode(true);\r\n                var _ext = {};\r\n                _ext[eachExpr.iterator.val] = v;\r\n                _ext[eachExpr.iterator.key] = k;\r\n                Bind($copy, ref, [_ext].concat(ext));\r\n\r\n                $targetList.on({\r\n                    set: function (oval, nval, i, arr) {\r\n                        if (i == k) {\r\n                            console.log('set', i, nval);\r\n                            _ext[eachExpr.iterator.val] = nval;\r\n                        }\r\n                    },\r\n                    // push: function (v) {},\r\n                    unshift: function (v) {\r\n                        k++;\r\n                        _ext[eachExpr.iterator.key] = k;\r\n                    },\r\n                    // pop: function () {},\r\n                    shift: function () {\r\n                        if (k > 0) {\r\n                            k--;\r\n                            _ext[eachExpr.iterator.key] = k;\r\n                        }\r\n                    },\r\n                    splice: function (startIndex, howManyToDelete, itemToInsert) {\r\n                        if (howManyToDelete) {\r\n                            if (k >= startIndex + howManyToDelete) {\r\n                                k -= howManyToDelete;\r\n                                _ext[eachExpr.iterator.key] = k;\r\n                            }\r\n                        } else {\r\n                            var howManyItemsToInsert = Array.prototype.slice.call(arguments, 2).length;\r\n                            if (k >= startIndex) {\r\n                                k += howManyItemsToInsert;\r\n                                _ext[eachExpr.iterator.key] = k;\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n\r\n                return $copy;\r\n            }\r\n\r\n            Util.each($targetList, function (v, i) {\r\n                $parent.appendChild(bindItem(v, i));\r\n            });\r\n\r\n            $targetList.on({\r\n                // set: function (oval, nval, i, arr) {},\r\n                resize: function () {\r\n                    if ($parent.nodeName.toLowerCase() === 'select') {\r\n                        $parent.dispatchEvent(new Event('change'));\r\n                    }\r\n                },\r\n                push: function (v) {\r\n                    $parent.appendChild(bindItem(v, $targetList.length - 1));\r\n                },\r\n                unshift: function (v) {\r\n                    $parent.insertBefore(bindItem(v, 0), $parent.childNodes[0]);\r\n                },\r\n                pop: function () {\r\n                    $parent.removeChild($parent.lastChild);\r\n                },\r\n                shift: function () {\r\n                    $parent.removeChild($parent.firstChild);\r\n                },\r\n                splice: function (startIndex, howManyToDelete, itemToInsert) {\r\n                    if (howManyToDelete) {\r\n                        for (; howManyToDelete > 0; howManyToDelete--) {\r\n                            $parent.removeChild($parent.childNodes[startIndex]);\r\n                        }\r\n                    } else {\r\n                        var itemsToInsert = Array.prototype.slice.call(arguments, 2);\r\n                        Util.each(itemsToInsert, function (v, i) {\r\n                            $parent.insertBefore(bindItem(v, startIndex + i), $parent.childNodes[startIndex + i]);\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        /* Bind child nodes recursively */\r\n        Util.each($el, function (node) {\r\n            Bind(node, ref, ext);\r\n        });\r\n\r\n        /* Bind attributes */\r\n        var attrList = [];\r\n        Util.each($el.attributes, function (value, name) {\r\n            if (!name.startsWith(Parser.conf.attrPrefix)) return;\r\n            attrList.push(name);\r\n            name = name.substr(Parser.conf.attrPrefix.length).toLowerCase();\r\n\r\n            var eventName = Util.isEventName(name);\r\n            if (eventName) { /* Event */\r\n                Util.addEvent($el, eventName, function (e) {\r\n                    Parser.executeFunctionWithScope(value, [{\r\n                        e: e\r\n                    }].concat(scopes));\r\n                }, true);\r\n                return;\r\n            }\r\n\r\n            if (domValueToBind[nodeName] && name === 'value') { /* Two-way binding */\r\n                var valueProp = Parser.conf.refBeginsWithDollar ? value.substr(1) : value;\r\n                var valueTarget = Util.seekTarget(valueProp, ext, ref);\r\n                Util.addEvent($el, domValueToBind[nodeName], function (e) {\r\n                    console.log('input change');\r\n                    Data(valueTarget, valueProp, this.value);\r\n                }, false);\r\n            }\r\n\r\n            if (Parser.domProp[name]) name = Parser.domProp[name];\r\n            else name = Parser.conf.attrsFlag + name; /* Attribute */\r\n\r\n            /* Binding */\r\n            var allrel = Parser.relationFromExprToRef(value, scopes, $el, name);\r\n            allrel.forEach(function (a) {\r\n                Relate(a.target, a.relations);\r\n            });\r\n        });\r\n\r\n        /* Clean attributes */\r\n        Util.each(attrList, function (name) {\r\n            $el.removeAttribute(name);\r\n        });\r\n    } else if ($el.nodeType === Node.TEXT_NODE) {\r\n        var tmpl = $el.nodeValue;\r\n        var expr = Parser.parseExprsInRawText(tmpl).join(';');\r\n        if (expr === '') return null;\r\n\r\n        /* Binding */\r\n        var allrel;\r\n        var $targetEl = $el;\r\n        var targetRef = 'nodeValue';\r\n        if ($el.parentNode.nodeName.toLowerCase() === 'textarea') {\r\n            $targetEl = $el.parentNode;\r\n            targetRef = 'value';\r\n        }\r\n        allrel = Parser.relationFromExprToRef(expr, scopes, $targetEl, targetRef, function () {\r\n            return Parser.evaluateRawTextWithTmpl(tmpl, scopes);\r\n        });\r\n        allrel.forEach(function (a) {\r\n            Relate(a.target, a.relations);\r\n        });\r\n    }\r\n\r\n    return $el;\r\n}\r\n\r\n/**\r\n * Unbind data from DOM.\r\n * @param       {[type]} $el      [description]\r\n * @param       {[type]} ref      [description]\r\n * @param       {[type]} relation [description]\r\n * @constructor\r\n */\r\nfunction Unbind($el, ref, relation) {\r\n    // TODO\r\n}\r\n\r\n/**\r\n * Constructor.\r\n * @param {*} $el \r\n * @param {*} ref \r\n */\r\nvar DMD = function ($el, ref) {\r\n    if (Util.isString($el)) {\r\n        $el = window.document.querySelector($el);\r\n    }\r\n    Bind.call(this, $el, ref);\r\n};\r\n\r\nDMD.kernel = Kernel;\r\nDMD.relate = Relate;\r\nDMD.$ = Data;\r\n\r\nexport default DMD\r\n","(function () {\r\n    // Array.prototype.forEach\r\n    // Array.prototype.filter\r\n    // Array.prototype.map\r\n    // String.prototype.trim\r\n    // String.prototype.startsWith\r\n    // String.prototype.endsWith\r\n    // Object.keys\r\n    if (!Object.keys) {\r\n        Object.keys = function (o) {\r\n            if (o !== Object(o)) throw new TypeError('Object.keys called on a non-object');\r\n            var k = [];\r\n            for (var p in o) if (Object.prototype.hasOwnProperty.call(o, p)) k.push(p);\r\n            return k;\r\n        };\r\n    }\r\n    // Object.values\r\n    if (!Object.values) {\r\n        Object.values = function (o) {\r\n            if (o !== Object(o)) throw new TypeError('Object.values called on a non-object');\r\n            var v = [];\r\n            for (var p in o) if (Object.prototype.hasOwnProperty.call(o, p)) v.push(o[p]);\r\n            return v;\r\n        };\r\n    }\r\n})();\r\n"],"names":["addEvent","$el","eventName","handler","useCapture","addEventListener","attachEvent","flatten","root","objectFilter","clean","ext","each","v","p","isObject","f","vv","pp","defineProperty","target","prop","desc","Object","value","OArray","arr","option","Util.isObject","arguments","length","Util.isArray","this","get","set","_this","eventNames","forEach","e","Util.each","i","assignElement","proppath","Util.isNode","Util.isInstance","on","oval","nval","fullpathOf","GetterSetter","ref","undefined","pre","register","Store","__kernel_root","id","Util.gid","formatStream","stream","Util.isString","map","a","alias","propKernelOrder","PropKernelTable","Kernel","path","relations","obj","scopeOf","property","__kid","KernelStatus","Util.hasProperty","push","dnstream","resultIn","upstream","resultFrom","lazy","Dnstreams","Upstreams","ResultsIn","Util.isFunction","ResultsFrom","k","deps","Laziness","apply","Data","val","force","Util.extend","kmap","ds","toUpdateDnstream","enumerable","isRelationDefinition","r","specProps","__isRelation","count","Relate","fr","Util.flatten","rel","fullpath","lastDot","lastIndexOf","targetPath","substring","propPath","targetValue","__","refPath","ensurePathValid","toSet","paths","split","parent","Util.isBasic","shift","executeFunctionWithScope","expr","refs","conf","refBeginsWithDollar","replace","match","p1","substr","params","keys","args","values","Function","join","evaluateExpression","replaceTmplInStrLiteral","result","str","reg","evaluateRawTextWithTmpl","text","parseRefsInExpr","parseEachExpr","valStr","keyStr","targetStr","Regs","each12","exec","each11","each22","each21","Util.seekTarget","targetRef","iterator","key","parseExprsInRawText","exprs","relationFromExprToRef","targetIsNode","classList","stylePairs","startsWith","attrsFlag","attrName","setAttribute","refsInExpr","subData","Util.seekTargetIndex","re","s","Util.allRefs","getAllRefs","refpath","Bind","scopes","concat","nodeName","toLowerCase","nodeType","Node","ELEMENT_NODE","domBoundFlag","TEXT_NODE","tmpl","nodeValue","Parser.parseExprsInRawText","$targetEl","parentNode","Parser.relationFromExprToRef","Parser.evaluateRawTextWithTmpl","hasAttribute","Parser.conf","attrPrefix","eachAttrName","eachExpr","Parser.parseEachExpr","getAttribute","removeAttribute","$parent","innerHTML","$targetList","bindItem","$copy","cloneNode","_ext","console","log","unshift","splice","startIndex","howManyToDelete","itemToInsert","howManyItemsToInsert","Array","prototype","slice","call","appendChild","resize","dispatchEvent","Event","insertBefore","childNodes","pop","removeChild","lastChild","firstChild","itemsToInsert","node","attrList","attributes","name","Util.isEventName","Util.addEvent","Parser.executeFunctionWithScope","domValueToBind","valueProp","valueTarget","Parser.domProp","o","TypeError","hasOwnProperty","gid","n","isNumber","isNumeric","parseInt","isNaN","isString","isFunction","toString","isArray","isLikeArray","isBasic","isInstance","creator","isNode","isNamedNodeMap","NamedNodeMap","isEventName","func","arrayReverse","len","ret","COMMENT_NODE","PROCESSING_INSTRUCTION_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","clone","constructor","hasProperty","clear","withBasicVal","inRef","shrinkArray","extend","dest","srcs","extendObj","src","argOffset","lastArg","allRefs","hasRef","seekTarget","seekTargetIndex","roots","index","hdl","evt","removeEventListener","handlers","h","off","trigger","__data","configurable","deleteElement","toArray","notClone","Util.clone","Util.isNumber","itemsToDelete","howManyToInsert","howManyToSet","Math","min","j","fn","cast","disable","enable","destroy","domProp","checked","innertext","innerhtml","class","style","domListKey","input","select","DMD","window","document","querySelector","kernel","relate","$"],"mappings":"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"}