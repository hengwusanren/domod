{"version":3,"file":"domod.js","sources":["../src/Util.js","../src/AliasDOM.js","../src/DataBinding.js","../src/index.js"],"sourcesContent":["var gid = (function () {\n    var n = 0;\n    return function () {\n        return n++;\n    };\n})();\n\nvar isNumber = function (v) {\n    return typeof v === 'number';\n};\n\nvar isNumeric = function (v) {\n    var n = parseInt(v);\n    if (isNaN(n)) return false;\n    return (typeof v === 'number' || typeof v === 'string') && n == v;\n};\n\nvar isString = function (v) {\n    return typeof v === 'string';\n};\n\nvar isFunction = function (v) {\n    return typeof v === 'function';\n};\n\nvar isObject = function (v) {\n    return Object.prototype.toString.call(v) === '[object Object]';\n};\n\nvar isArray = function (v) {\n    return Object.prototype.toString.call(v) === '[object Array]';\n};\n\nvar isBasic = function (v) {\n    return v == null\n        || typeof v === 'boolean'\n        || typeof v === 'number'\n        || typeof v === 'string'\n        || typeof v === 'function';\n};\n\nvar isInstance = function (v, creator) {\n    return typeof creator === 'function' && v instanceof creator;\n};\n\nvar isNode = function (v) {\n    return v instanceof Node;\n};\n\nvar isNamedNodeMap = function (v) {\n    return v instanceof NamedNodeMap;\n};\n\nvar isEventName = function (v) {\n    if (!isString(v)) return false;\n    return v.startsWith('on'); // TODO\n};\n\nvar isCSSSelector = function (v) {\n    return v.indexOf(' ') > 0 || v.indexOf('.') >= 0\n        || v.indexOf('[') >= 0 || v.indexOf('#') >= 0;\n};\n\nvar each = function (v, func, arrayReverse) {\n    if (isObject(v)) {\n        for (var p in v) {\n            if (!v.hasOwnProperty(p)) continue;\n            var r = func(v[p], p);\n            if (r === false) break;\n        }\n    } else if (isArray(v)) {\n        if (!arrayReverse) {\n            for (var i = 0, len = v.length; i < len; i++) {\n                var r = func(v[i], i);\n                if (r === false) break;\n            }\n        } else {\n            for (var i = v.length - 1; i >= 0; i--) {\n                var r = func(v[i], i);\n                if (r === false) break;\n            }\n        }\n    } else if (isNode(v)) {\n        var ret = false;\n        switch (v.nodeType) {\n            case Node.ELEMENT_NODE:\n                break;\n            case Node.TEXT_NODE:\n            case Node.COMMENT_NODE:\n            case Node.PROCESSING_INSTRUCTION_NODE:\n            case Node.DOCUMENT_NODE:\n            case Node.DOCUMENT_TYPE_NODE:\n            case Node.DOCUMENT_FRAGMENT_NODE:\n            default:\n                ret = true;\n        }\n        if (ret) return;\n        for (var i = 0, childNodes = v.childNodes, len = v.childNodes.length; i < len; i++) {\n            func(childNodes[i]);\n            each(childNodes[i], func);\n        }\n    } else if (isNamedNodeMap(v)) {\n        for (var i = 0, len = v.length; i < len; i++) {\n            var r = func(v[i]['nodeValue'], v[i]['nodeName']);\n            if (r === false) break;\n        }\n    }\n};\n\nvar clone = function (val) {\n    var r = val;\n    if (isObject(val)) {\n        r = {};\n        each(val, function (v, p) {\n            r[p] = clone(v);\n        });\n    } else if (isArray(val)) {\n        r = [];\n        each(val, function (v) {\n            r.push(clone(v));\n        });\n    }\n    return r;\n};\n\nvar hasProperty = function (val, p) {\n    if (isObject(val)) {\n        return val.hasOwnProperty(p);\n    } else if (isArray(val)) {\n        var n = parseInt(p);\n        return isNumeric(p) && val.length > n && n >= 0;\n    }\n    return false;\n};\n\nvar clear = function (val, p) {\n    var inRef = isString(p) || isNumber(p);\n    var target = inRef ? val[p] : val;\n\n    if (isObject(target) || isArray(target)) {\n        each(target, function (v, p) {\n            clear(target, p);\n        });\n        if (isArray(target)) {\n            shrinkArray(target);\n        }\n    }\n\n    if (inRef) {\n        val[p] = undefined;\n    }\n};\n\nvar shrinkArray = function (arr, len) {\n    var limited = isNumber(len);\n    if (!limited) {\n        each(arr, function (v, i) {\n            if (v === undefined) arr.length--;\n        }, true);\n    } else {\n        each(arr, function (v, i) {\n            if (i >= len) arr.length--;\n            else return false;\n        }, true);\n        while (arr.length < len) {\n            arr.push(null);\n        }\n    }\n    return arr;\n};\n\nvar extend = function (dest, srcs, clean) {\n    if (!isObject(dest)) return null;\n    var args = Array.prototype.slice.call(arguments, 1,\n        arguments[arguments.length - 1] === true ? (arguments.length - 1) : arguments.length);\n\n    var extendObj = function (obj, src, clean) {\n        if (!isObject(src)) return;\n        each(src, function (v, p) {\n            if (!hasProperty(obj, p) || isBasic(v)) {\n                obj[p] = clone(v);\n            } else {\n                extendObj(obj[p], v, clean);\n            }\n        });\n        if (clean) {\n            each(obj, function (v, p) {\n                if (!hasProperty(src, p)) {\n                    clear(obj, p);\n                }\n            });\n            if (isArray(obj)) {\n                shrinkArray(obj);\n            }\n        }\n    };\n\n    each(args, function (src) {\n        extendObj(dest, src, clean);\n    });\n    return dest;\n};\n\nexport {\n    gid,\n    isNumber,\n    isNumeric,\n    isString,\n    isFunction,\n    isObject,\n    isArray,\n    isBasic,\n    isInstance,\n    isNode,\n    isNamedNodeMap,\n    isEventName,\n    isCSSSelector,\n    each,\n    clone,\n    hasProperty,\n    clear,\n    shrinkArray,\n    extend\n}\n","import * as Util from './Util'\n\n/**\n * Alias DOM constructor function.\n * @param  {Object|String} map              Selector-alias map.\n * @param  {HTMLElement|Undefined} $el      Root element.\n * @return {Object}                         Result table.\n */\nvar AliasDOM = function (map, $el) {\n    var ifJoinAlias = !!map.join;\n    var aliasSeparator = '/';\n\n    function isKeyword(w) {\n        return w === 'alias' || w === 'lazy' || w === 'join';\n    }\n\n    function alias(map, $root, obj, fullSel, fullAlias) {\n        map = Util.isString(map) ? {\n            alias: map\n        } : (Util.isObject(map) ? map : {});\n        $root = $root || window.document.body;\n        obj = obj || {};\n        if (!obj.__root) {\n            Object.defineProperty(obj, '__root', {\n                get: function () {\n                    return $root;\n                },\n                enumerable: false\n            });\n        }\n        fullSel = fullSel || [];\n        fullAlias = fullAlias || [];\n\n        function querySelector($parent, sel) {\n            if (!sel) return $parent;\n            var $targets = Array.prototype.slice.call($parent.querySelectorAll(sel));\n            if ($targets.length < 1) {\n                return null;\n            } else if ($targets.length === 1) {\n                return $targets[0];\n            } else {\n                return $targets;\n            }\n        }\n\n        if (map.alias) {\n            fullAlias = fullAlias.concat(map.alias);\n            var aliasProperty = ifJoinAlias ? fullAlias.join(aliasSeparator) : map.alias;\n            if (map.lazy) {\n                Object.defineProperty(obj, aliasProperty, {\n                    get: function () {\n                        return querySelector(this.__root, fullSel.join(' '));\n                    },\n                    enumerable: true\n                });\n            } else {\n                obj[aliasProperty] = querySelector($root, fullSel.join(' '));\n            }\n        }\n\n        Util.each(map, function (v, sel) {\n            if (isKeyword(sel)) return;\n            alias(v,\n                $root,\n                obj,\n                fullSel.concat(sel),\n                fullAlias\n            );\n        });\n\n        return obj;\n    }\n\n    function lazyDown(map) {\n        if (!Util.isObject(map)) return;\n        if (map.lazy) {\n            Util.each(map, function (v, p) {\n                if (isKeyword(p)) return;\n                if (Util.isString(v)) {\n                    map[p] = {\n                        alias: v,\n                        lazy: true\n                    };\n                } else if (Util.isObject(v)) {\n                    v.lazy = true;\n                }\n            });\n        }\n        Util.each(map, lazyDown);\n    }\n\n    lazyDown(map);\n\n    alias(map, $el, this);\n};\n\n/**\n * Alias DOM factory function.\n * @param  {Object|String} map              Selector-alias map.\n * @param  {HTMLElement|Undefined} $el      Root element.\n * @return {AliasDOM}                       An AliasDOM instance.\n */\nvar Alias = function (map, $el) {\n    return new AliasDOM(map, $el);\n};\n\nexport {\n    AliasDOM,\n    Alias\n}\n","import * as Util from './Util'\n\n/**\n * Bind an object data into a reference base.\n * @param  {Object} data                [description]\n * @param  {Boolean} force              [description]\n * @param  {String} idPropertyName      [description]\n * @param  {Object} refBase             [description]\n * @return {[type]}                     [description]\n */\nvar BindData = function (data, force, idPropertyName, refBase) {\n    if (!Util.isObject(data)) return false;\n    if (data[idPropertyName] !== undefined && !force) return;\n\n    var id = Util.gid();\n    Object.defineProperty(data, idPropertyName, {\n        get: function () {\n            return id;\n        },\n        enumerable: false\n    });\n    refBase[id] = {\n        data: data,\n        props: {},\n        paths: {}\n    };\n\n    var bindProps = function (node, obj) {\n        if (!Util.isObject(obj)) return;\n        node.props = {};\n        Util.each(obj, function (v, p) {\n            node.props[p] = {\n                setters: []\n            };\n            bindProps(node.props[p], v);\n        });\n    };\n    bindProps(refBase[id], data);\n\n    var setSetters = function (obj, node) {\n        Util.each(obj, function (v, p) {\n            delete obj[p];\n            Object.defineProperty(obj, p, {\n                get: function () {\n                    return v;\n                },\n                set: function (_v) {\n                    if (Util.isBasic(v)) {\n                        v = _v;\n                    } else {\n                        if (Util.isBasic(_v)) {\n                            Util.clear(obj, p);\n                            v = _v;\n                        } else {\n                            Util.extend(v, _v, true);\n                        }\n                    }\n\n                    var execSetters = function (node, v, oldv) {\n                        Util.each(node.setters, function (setter) {\n                            setter(v, oldv);\n                        });\n                        // Util.each(node.props, function (pv, pn) {\n                        //     execSetters(pv, v[pn], oldv[pn]);\n                        // });\n                    };\n                    execSetters(node.props[p], v, _v);\n                },\n                enumerable: true\n            });\n            setSetters(v, node.props[p]);\n        });\n    };\n    setSetters(data, refBase[id]);\n};\n\nexport default BindData\n","import * as Util from './Util'\nimport { AliasDOM, Alias } from './AliasDOM'\nimport BindDataToRefBase from './DataBinding'\n\n/**\n * Bind data to DOM.\n * @param  {Object} ref                 [description]\n * @param  {HTMLElement|AliasDOM} $el   [description]\n * @param  {Object} relation            [description]\n * @return {[type]}                     [description]\n * @note   如果有relation，则认为是active模式，否则是passive模式；active模式会主动去\n *         遍历relation的属性进行绑定；passive模式会遍历$el的DOM属性\n */\nvar Bind = function (ref, $el, relation) {\n    var _this = this;\n\n    if (Util.isInstance($el, AliasDOM)) {\n        Util.each($el, function (dom) {\n            Bind(ref, dom);\n        });\n        return;\n    }\n\n    if (!Util.isNode($el)) return;\n\n    var mode = Util.isObject(relation) ? 'active' : 'passive';\n\n    if (mode === 'active') {\n        Util.each(relation, function (v, p) {\n            switch (p) {\n                case 'show':\n                case 'innerText':\n                case 'innerHTML':\n                case 'className':\n                case 'style':\n                    break;\n                default:\n                    var pNum = parseInt(p);\n                    if (!isNaN(pNum)) { /* Node Index */\n                    } else if (Util.isEventName(p)) { /* Event */\n                    } else if (Util.isCSSSelector(p)) { /* CSS Selector */\n                    } else { /* Attribute */\n                    }\n            }\n        });\n    } else {\n        if ($el.nodeType === Node.ELEMENT_NODE) {\n            Util.each($el.attributes, function (value, name) {\n                if (!name.startsWith(_this.attrPrefix)) return;\n                name = name.substr(_this.attrPrefix.length);\n                switch (name) {\n                    case 'show':\n                        break;\n                    case 'text':\n                        break;\n                    case 'html':\n                        break;\n                    case 'class':\n                        break;\n                    case 'style':\n                        break;\n                    default:\n                        if (Util.isEventName(name)) { /* Event */\n                        } else { /* Attribute */\n                        }\n                }\n            });\n            Util.each($el, function (node) {\n                Bind(ref, node);\n            });\n        } else if ($el.nodeType === Node.TEXT_NODE) {\n            // TODO\n        }\n    }\n};\n\nvar DefaultConf = {\n    attrPrefix: 'm-',\n    tmplEngine: {\n        parseDeps: function (tmpl) {\n\n        },\n        classParser: function () {},\n        styleParser: function () {},\n        eventParser: function () {},\n        attrValueParser: function () {},\n        textValueParser: function () {}\n    }\n};\n\nvar DMD = function ($el, option) {\n    this.$el = $el || window.document.body;\n\n    this.defaults = {};\n    Util.extend(this.defaults, DefaultConf, option);\n};\n\nvar DMDDefs = {\n    realRefs: 'DMD_REAL_REFs',\n    darkRef: '__DMD_DARK_REF',\n    refSeparator: '/'\n};\nvar DMDRefSpace = {};\n\n/**\n * Bind an object data.\n * @param  {Object} data                [description]\n * @param  {Boolean} force              [description]\n * @return {[type]}                     [description]\n */\nvar BindData = function (data, force) {\n    return BindDataToRefBase(data, force, DMDDefs.darkRef, DMDRefSpace);\n};\n\nDMD[DMDDefs.realRefs] = DMDRefSpace;\n\nDMD.prototype.alias = function (map) {\n    return Alias(map, this.$el);\n};\nDMD.prototype.bind = function (ref, relation) {\n    BindData(ref);\n    return Bind(ref, this.$el, relation);\n};\n\nvar factory = function ($el, option) {\n    return new DMD($el, option);\n};\nfactory.defaults = Util.clone(DefaultConf);\nfactory.alias = Alias;\nfactory.bind = Bind;\nfactory.data = BindData;\n\nexport default factory\n"],"names":["gid","n","isNumber","v","isNumeric","parseInt","isNaN","isString","isObject","Object","prototype","toString","call","isArray","isBasic","isInstance","creator","isNode","Node","isNamedNodeMap","NamedNodeMap","isEventName","startsWith","isCSSSelector","indexOf","each","func","arrayReverse","p","hasOwnProperty","r","i","length","len","ret","nodeType","ELEMENT_NODE","TEXT_NODE","COMMENT_NODE","PROCESSING_INSTRUCTION_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","childNodes","clone","val","push","hasProperty","clear","inRef","target","shrinkArray","undefined","arr","extend","dest","srcs","clean","args","Array","slice","arguments","extendObj","obj","src","AliasDOM","map","$el","isKeyword","w","alias","$root","fullSel","fullAlias","querySelector","$parent","sel","$targets","querySelectorAll","Util.isString","Util.isObject","window","document","body","__root","defineProperty","get","enumerable","concat","aliasProperty","ifJoinAlias","join","aliasSeparator","lazy","this","Util.each","lazyDown","Alias","BindData","data","force","idPropertyName","refBase","id","Util.gid","props","paths","bindProps","node","setters","setSetters","set","_v","Util.isBasic","Util.clear","Util.extend","oldv","setter","execSetters","Bind","ref","relation","_this","Util.isInstance","dom","Util.isNode","pNum","Util.isEventName","Util.isCSSSelector","attributes","value","name","attrPrefix","substr","DefaultConf","tmplEngine","parseDeps","tmpl","classParser","styleParser","eventParser","attrValueParser","textValueParser","DMD","option","defaults","DMDDefs","realRefs","darkRef","refSeparator","DMDRefSpace","BindDataToRefBase","bind","factory","Util.clone"],"mappings":"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"}